### YamlMime:XRefMap
sorted: true
references:
- uid: Biocs
  name: Biocs
  href: api/Biocs.html
  commentId: N:Biocs
  fullName: Biocs
  nameWithType: Biocs
- uid: Biocs.Codon
  name: Codon
  href: api/Biocs.Codon.html
  commentId: T:Biocs.Codon
  fullName: Biocs.Codon
  nameWithType: Codon
- uid: Biocs.Codon.#ctor(Biocs.DnaBase,Biocs.DnaBase,Biocs.DnaBase)
  name: Codon(DnaBase, DnaBase, DnaBase)
  href: api/Biocs.Codon.html#Biocs_Codon__ctor_Biocs_DnaBase_Biocs_DnaBase_Biocs_DnaBase_
  commentId: M:Biocs.Codon.#ctor(Biocs.DnaBase,Biocs.DnaBase,Biocs.DnaBase)
  name.vb: New(DnaBase, DnaBase, DnaBase)
  fullName: Biocs.Codon.Codon(Biocs.DnaBase, Biocs.DnaBase, Biocs.DnaBase)
  fullName.vb: Biocs.Codon.New(Biocs.DnaBase, Biocs.DnaBase, Biocs.DnaBase)
  nameWithType: Codon.Codon(DnaBase, DnaBase, DnaBase)
  nameWithType.vb: Codon.New(DnaBase, DnaBase, DnaBase)
- uid: Biocs.Codon.#ctor*
  name: Codon
  href: api/Biocs.Codon.html#Biocs_Codon__ctor_
  commentId: Overload:Biocs.Codon.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.Codon.Codon
  fullName.vb: Biocs.Codon.New
  nameWithType: Codon.Codon
  nameWithType.vb: Codon.New
- uid: Biocs.Codon.Any
  name: Any
  href: api/Biocs.Codon.html#Biocs_Codon_Any
  commentId: P:Biocs.Codon.Any
  fullName: Biocs.Codon.Any
  nameWithType: Codon.Any
- uid: Biocs.Codon.Any*
  name: Any
  href: api/Biocs.Codon.html#Biocs_Codon_Any_
  commentId: Overload:Biocs.Codon.Any
  isSpec: "True"
  fullName: Biocs.Codon.Any
  nameWithType: Codon.Any
- uid: Biocs.Codon.Equals(Biocs.Codon)
  name: Equals(Codon)
  href: api/Biocs.Codon.html#Biocs_Codon_Equals_Biocs_Codon_
  commentId: M:Biocs.Codon.Equals(Biocs.Codon)
  fullName: Biocs.Codon.Equals(Biocs.Codon)
  nameWithType: Codon.Equals(Codon)
- uid: Biocs.Codon.Equals(System.Object)
  name: Equals(object?)
  href: api/Biocs.Codon.html#Biocs_Codon_Equals_System_Object_
  commentId: M:Biocs.Codon.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Biocs.Codon.Equals(object?)
  fullName.vb: Biocs.Codon.Equals(Object)
  nameWithType: Codon.Equals(object?)
  nameWithType.vb: Codon.Equals(Object)
- uid: Biocs.Codon.Equals*
  name: Equals
  href: api/Biocs.Codon.html#Biocs_Codon_Equals_
  commentId: Overload:Biocs.Codon.Equals
  isSpec: "True"
  fullName: Biocs.Codon.Equals
  nameWithType: Codon.Equals
- uid: Biocs.Codon.First
  name: First
  href: api/Biocs.Codon.html#Biocs_Codon_First
  commentId: P:Biocs.Codon.First
  fullName: Biocs.Codon.First
  nameWithType: Codon.First
- uid: Biocs.Codon.First*
  name: First
  href: api/Biocs.Codon.html#Biocs_Codon_First_
  commentId: Overload:Biocs.Codon.First
  isSpec: "True"
  fullName: Biocs.Codon.First
  nameWithType: Codon.First
- uid: Biocs.Codon.Gap
  name: Gap
  href: api/Biocs.Codon.html#Biocs_Codon_Gap
  commentId: P:Biocs.Codon.Gap
  fullName: Biocs.Codon.Gap
  nameWithType: Codon.Gap
- uid: Biocs.Codon.Gap*
  name: Gap
  href: api/Biocs.Codon.html#Biocs_Codon_Gap_
  commentId: Overload:Biocs.Codon.Gap
  isSpec: "True"
  fullName: Biocs.Codon.Gap
  nameWithType: Codon.Gap
- uid: Biocs.Codon.GetHashCode
  name: GetHashCode()
  href: api/Biocs.Codon.html#Biocs_Codon_GetHashCode
  commentId: M:Biocs.Codon.GetHashCode
  fullName: Biocs.Codon.GetHashCode()
  nameWithType: Codon.GetHashCode()
- uid: Biocs.Codon.GetHashCode*
  name: GetHashCode
  href: api/Biocs.Codon.html#Biocs_Codon_GetHashCode_
  commentId: Overload:Biocs.Codon.GetHashCode
  isSpec: "True"
  fullName: Biocs.Codon.GetHashCode
  nameWithType: Codon.GetHashCode
- uid: Biocs.Codon.IsAtomic
  name: IsAtomic
  href: api/Biocs.Codon.html#Biocs_Codon_IsAtomic
  commentId: P:Biocs.Codon.IsAtomic
  fullName: Biocs.Codon.IsAtomic
  nameWithType: Codon.IsAtomic
- uid: Biocs.Codon.IsAtomic*
  name: IsAtomic
  href: api/Biocs.Codon.html#Biocs_Codon_IsAtomic_
  commentId: Overload:Biocs.Codon.IsAtomic
  isSpec: "True"
  fullName: Biocs.Codon.IsAtomic
  nameWithType: Codon.IsAtomic
- uid: Biocs.Codon.Parse(System.ReadOnlySpan{System.Char})
  name: Parse(ReadOnlySpan<char>)
  href: api/Biocs.Codon.html#Biocs_Codon_Parse_System_ReadOnlySpan_System_Char__
  commentId: M:Biocs.Codon.Parse(System.ReadOnlySpan{System.Char})
  name.vb: Parse(ReadOnlySpan(Of Char))
  fullName: Biocs.Codon.Parse(System.ReadOnlySpan<char>)
  fullName.vb: Biocs.Codon.Parse(System.ReadOnlySpan(Of Char))
  nameWithType: Codon.Parse(ReadOnlySpan<char>)
  nameWithType.vb: Codon.Parse(ReadOnlySpan(Of Char))
- uid: Biocs.Codon.Parse*
  name: Parse
  href: api/Biocs.Codon.html#Biocs_Codon_Parse_
  commentId: Overload:Biocs.Codon.Parse
  isSpec: "True"
  fullName: Biocs.Codon.Parse
  nameWithType: Codon.Parse
- uid: Biocs.Codon.Second
  name: Second
  href: api/Biocs.Codon.html#Biocs_Codon_Second
  commentId: P:Biocs.Codon.Second
  fullName: Biocs.Codon.Second
  nameWithType: Codon.Second
- uid: Biocs.Codon.Second*
  name: Second
  href: api/Biocs.Codon.html#Biocs_Codon_Second_
  commentId: Overload:Biocs.Codon.Second
  isSpec: "True"
  fullName: Biocs.Codon.Second
  nameWithType: Codon.Second
- uid: Biocs.Codon.Symbols
  name: Symbols
  href: api/Biocs.Codon.html#Biocs_Codon_Symbols
  commentId: P:Biocs.Codon.Symbols
  fullName: Biocs.Codon.Symbols
  nameWithType: Codon.Symbols
- uid: Biocs.Codon.Symbols*
  name: Symbols
  href: api/Biocs.Codon.html#Biocs_Codon_Symbols_
  commentId: Overload:Biocs.Codon.Symbols
  isSpec: "True"
  fullName: Biocs.Codon.Symbols
  nameWithType: Codon.Symbols
- uid: Biocs.Codon.Third
  name: Third
  href: api/Biocs.Codon.html#Biocs_Codon_Third
  commentId: P:Biocs.Codon.Third
  fullName: Biocs.Codon.Third
  nameWithType: Codon.Third
- uid: Biocs.Codon.Third*
  name: Third
  href: api/Biocs.Codon.html#Biocs_Codon_Third_
  commentId: Overload:Biocs.Codon.Third
  isSpec: "True"
  fullName: Biocs.Codon.Third
  nameWithType: Codon.Third
- uid: Biocs.Codon.ToLower
  name: ToLower()
  href: api/Biocs.Codon.html#Biocs_Codon_ToLower
  commentId: M:Biocs.Codon.ToLower
  fullName: Biocs.Codon.ToLower()
  nameWithType: Codon.ToLower()
- uid: Biocs.Codon.ToLower*
  name: ToLower
  href: api/Biocs.Codon.html#Biocs_Codon_ToLower_
  commentId: Overload:Biocs.Codon.ToLower
  isSpec: "True"
  fullName: Biocs.Codon.ToLower
  nameWithType: Codon.ToLower
- uid: Biocs.Codon.ToString
  name: ToString()
  href: api/Biocs.Codon.html#Biocs_Codon_ToString
  commentId: M:Biocs.Codon.ToString
  fullName: Biocs.Codon.ToString()
  nameWithType: Codon.ToString()
- uid: Biocs.Codon.ToString*
  name: ToString
  href: api/Biocs.Codon.html#Biocs_Codon_ToString_
  commentId: Overload:Biocs.Codon.ToString
  isSpec: "True"
  fullName: Biocs.Codon.ToString
  nameWithType: Codon.ToString
- uid: Biocs.Codon.ToUpper
  name: ToUpper()
  href: api/Biocs.Codon.html#Biocs_Codon_ToUpper
  commentId: M:Biocs.Codon.ToUpper
  fullName: Biocs.Codon.ToUpper()
  nameWithType: Codon.ToUpper()
- uid: Biocs.Codon.ToUpper*
  name: ToUpper
  href: api/Biocs.Codon.html#Biocs_Codon_ToUpper_
  commentId: Overload:Biocs.Codon.ToUpper
  isSpec: "True"
  fullName: Biocs.Codon.ToUpper
  nameWithType: Codon.ToUpper
- uid: Biocs.Codon.TryParse(System.ReadOnlySpan{System.Char},Biocs.Codon@)
  name: TryParse(ReadOnlySpan<char>, out Codon)
  href: api/Biocs.Codon.html#Biocs_Codon_TryParse_System_ReadOnlySpan_System_Char__Biocs_Codon__
  commentId: M:Biocs.Codon.TryParse(System.ReadOnlySpan{System.Char},Biocs.Codon@)
  name.vb: TryParse(ReadOnlySpan(Of Char), Codon)
  fullName: Biocs.Codon.TryParse(System.ReadOnlySpan<char>, out Biocs.Codon)
  fullName.vb: Biocs.Codon.TryParse(System.ReadOnlySpan(Of Char), Biocs.Codon)
  nameWithType: Codon.TryParse(ReadOnlySpan<char>, out Codon)
  nameWithType.vb: Codon.TryParse(ReadOnlySpan(Of Char), Codon)
- uid: Biocs.Codon.TryParse*
  name: TryParse
  href: api/Biocs.Codon.html#Biocs_Codon_TryParse_
  commentId: Overload:Biocs.Codon.TryParse
  isSpec: "True"
  fullName: Biocs.Codon.TryParse
  nameWithType: Codon.TryParse
- uid: Biocs.Codon.op_Equality(Biocs.Codon,Biocs.Codon)
  name: operator ==(Codon, Codon)
  href: api/Biocs.Codon.html#Biocs_Codon_op_Equality_Biocs_Codon_Biocs_Codon_
  commentId: M:Biocs.Codon.op_Equality(Biocs.Codon,Biocs.Codon)
  name.vb: =(Codon, Codon)
  fullName: Biocs.Codon.operator ==(Biocs.Codon, Biocs.Codon)
  fullName.vb: Biocs.Codon.=(Biocs.Codon, Biocs.Codon)
  nameWithType: Codon.operator ==(Codon, Codon)
  nameWithType.vb: Codon.=(Codon, Codon)
- uid: Biocs.Codon.op_Equality*
  name: operator ==
  href: api/Biocs.Codon.html#Biocs_Codon_op_Equality_
  commentId: Overload:Biocs.Codon.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Biocs.Codon.operator ==
  fullName.vb: Biocs.Codon.=
  nameWithType: Codon.operator ==
  nameWithType.vb: Codon.=
- uid: Biocs.Codon.op_Inequality(Biocs.Codon,Biocs.Codon)
  name: operator !=(Codon, Codon)
  href: api/Biocs.Codon.html#Biocs_Codon_op_Inequality_Biocs_Codon_Biocs_Codon_
  commentId: M:Biocs.Codon.op_Inequality(Biocs.Codon,Biocs.Codon)
  name.vb: <>(Codon, Codon)
  fullName: Biocs.Codon.operator !=(Biocs.Codon, Biocs.Codon)
  fullName.vb: Biocs.Codon.<>(Biocs.Codon, Biocs.Codon)
  nameWithType: Codon.operator !=(Codon, Codon)
  nameWithType.vb: Codon.<>(Codon, Codon)
- uid: Biocs.Codon.op_Inequality*
  name: operator !=
  href: api/Biocs.Codon.html#Biocs_Codon_op_Inequality_
  commentId: Overload:Biocs.Codon.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Biocs.Codon.operator !=
  fullName.vb: Biocs.Codon.<>
  nameWithType: Codon.operator !=
  nameWithType.vb: Codon.<>
- uid: Biocs.Collections
  name: Biocs.Collections
  href: api/Biocs.Collections.html
  commentId: N:Biocs.Collections
  fullName: Biocs.Collections
  nameWithType: Biocs.Collections
- uid: Biocs.Collections.CollectionTools
  name: CollectionTools
  href: api/Biocs.Collections.CollectionTools.html
  commentId: T:Biocs.Collections.CollectionTools
  fullName: Biocs.Collections.CollectionTools
  nameWithType: CollectionTools
- uid: Biocs.Collections.CollectionTools.AllItemsAreEqual*
  name: AllItemsAreEqual
  href: api/Biocs.Collections.CollectionTools.html#Biocs_Collections_CollectionTools_AllItemsAreEqual_
  commentId: Overload:Biocs.Collections.CollectionTools.AllItemsAreEqual
  isSpec: "True"
  fullName: Biocs.Collections.CollectionTools.AllItemsAreEqual
  nameWithType: CollectionTools.AllItemsAreEqual
- uid: Biocs.Collections.CollectionTools.AllItemsAreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: AllItemsAreEqual<T>(IEnumerable<T>, IEqualityComparer<T>?)
  href: api/Biocs.Collections.CollectionTools.html#Biocs_Collections_CollectionTools_AllItemsAreEqual__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Biocs.Collections.CollectionTools.AllItemsAreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: AllItemsAreEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Biocs.Collections.CollectionTools.AllItemsAreEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>?)
  fullName.vb: Biocs.Collections.CollectionTools.AllItemsAreEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: CollectionTools.AllItemsAreEqual<T>(IEnumerable<T>, IEqualityComparer<T>?)
  nameWithType.vb: CollectionTools.AllItemsAreEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Biocs.Collections.CollectionTools.AllItemsAreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},``0@)
  name: AllItemsAreEqual<T>(IEnumerable<T>, IEqualityComparer<T>?, out T)
  href: api/Biocs.Collections.CollectionTools.html#Biocs_Collections_CollectionTools_AllItemsAreEqual__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0____0__
  commentId: M:Biocs.Collections.CollectionTools.AllItemsAreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},``0@)
  name.vb: AllItemsAreEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T), T)
  fullName: Biocs.Collections.CollectionTools.AllItemsAreEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>?, out T)
  fullName.vb: Biocs.Collections.CollectionTools.AllItemsAreEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T), T)
  nameWithType: CollectionTools.AllItemsAreEqual<T>(IEnumerable<T>, IEqualityComparer<T>?, out T)
  nameWithType.vb: CollectionTools.AllItemsAreEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T), T)
- uid: Biocs.Collections.Counter`1
  name: Counter<T>
  href: api/Biocs.Collections.Counter-1.html
  commentId: T:Biocs.Collections.Counter`1
  name.vb: Counter(Of T)
  fullName: Biocs.Collections.Counter<T>
  fullName.vb: Biocs.Collections.Counter(Of T)
  nameWithType: Counter<T>
  nameWithType.vb: Counter(Of T)
- uid: Biocs.Collections.Counter`1.#ctor(Biocs.Collections.Counter{`0})
  name: Counter(Counter<T>)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1__ctor_Biocs_Collections_Counter__0__
  commentId: M:Biocs.Collections.Counter`1.#ctor(Biocs.Collections.Counter{`0})
  name.vb: New(Counter(Of T))
  fullName: Biocs.Collections.Counter<T>.Counter(Biocs.Collections.Counter<T>)
  fullName.vb: Biocs.Collections.Counter(Of T).New(Biocs.Collections.Counter(Of T))
  nameWithType: Counter<T>.Counter(Counter<T>)
  nameWithType.vb: Counter(Of T).New(Counter(Of T))
- uid: Biocs.Collections.Counter`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name: Counter(IEqualityComparer<T>?)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1__ctor_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Biocs.Collections.Counter`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name.vb: New(IEqualityComparer(Of T))
  fullName: Biocs.Collections.Counter<T>.Counter(System.Collections.Generic.IEqualityComparer<T>?)
  fullName.vb: Biocs.Collections.Counter(Of T).New(System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Counter<T>.Counter(IEqualityComparer<T>?)
  nameWithType.vb: Counter(Of T).New(IEqualityComparer(Of T))
- uid: Biocs.Collections.Counter`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  name: Counter(int, IEqualityComparer<T>?)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1__ctor_System_Int32_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Biocs.Collections.Counter`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  name.vb: New(Integer, IEqualityComparer(Of T))
  fullName: Biocs.Collections.Counter<T>.Counter(int, System.Collections.Generic.IEqualityComparer<T>?)
  fullName.vb: Biocs.Collections.Counter(Of T).New(Integer, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Counter<T>.Counter(int, IEqualityComparer<T>?)
  nameWithType.vb: Counter(Of T).New(Integer, IEqualityComparer(Of T))
- uid: Biocs.Collections.Counter`1.#ctor*
  name: Counter
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1__ctor_
  commentId: Overload:Biocs.Collections.Counter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.Collections.Counter<T>.Counter
  fullName.vb: Biocs.Collections.Counter(Of T).New
  nameWithType: Counter<T>.Counter
  nameWithType.vb: Counter(Of T).New
- uid: Biocs.Collections.Counter`1.Add(`0)
  name: Add(T)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Add__0_
  commentId: M:Biocs.Collections.Counter`1.Add(`0)
  fullName: Biocs.Collections.Counter<T>.Add(T)
  fullName.vb: Biocs.Collections.Counter(Of T).Add(T)
  nameWithType: Counter<T>.Add(T)
  nameWithType.vb: Counter(Of T).Add(T)
- uid: Biocs.Collections.Counter`1.Add(`0,System.Int32)
  name: Add(T, int)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Add__0_System_Int32_
  commentId: M:Biocs.Collections.Counter`1.Add(`0,System.Int32)
  name.vb: Add(T, Integer)
  fullName: Biocs.Collections.Counter<T>.Add(T, int)
  fullName.vb: Biocs.Collections.Counter(Of T).Add(T, Integer)
  nameWithType: Counter<T>.Add(T, int)
  nameWithType.vb: Counter(Of T).Add(T, Integer)
- uid: Biocs.Collections.Counter`1.Add*
  name: Add
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Add_
  commentId: Overload:Biocs.Collections.Counter`1.Add
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.Add
  fullName.vb: Biocs.Collections.Counter(Of T).Add
  nameWithType: Counter<T>.Add
  nameWithType.vb: Counter(Of T).Add
- uid: Biocs.Collections.Counter`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<T>)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_AddRange_System_Collections_Generic_IEnumerable__0__
  commentId: M:Biocs.Collections.Counter`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddRange(IEnumerable(Of T))
  fullName: Biocs.Collections.Counter<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Biocs.Collections.Counter(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Counter<T>.AddRange(IEnumerable<T>)
  nameWithType.vb: Counter(Of T).AddRange(IEnumerable(Of T))
- uid: Biocs.Collections.Counter`1.AddRange*
  name: AddRange
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_AddRange_
  commentId: Overload:Biocs.Collections.Counter`1.AddRange
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.AddRange
  fullName.vb: Biocs.Collections.Counter(Of T).AddRange
  nameWithType: Counter<T>.AddRange
  nameWithType.vb: Counter(Of T).AddRange
- uid: Biocs.Collections.Counter`1.Clear
  name: Clear()
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Clear
  commentId: M:Biocs.Collections.Counter`1.Clear
  fullName: Biocs.Collections.Counter<T>.Clear()
  fullName.vb: Biocs.Collections.Counter(Of T).Clear()
  nameWithType: Counter<T>.Clear()
  nameWithType.vb: Counter(Of T).Clear()
- uid: Biocs.Collections.Counter`1.Clear*
  name: Clear
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Clear_
  commentId: Overload:Biocs.Collections.Counter`1.Clear
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.Clear
  fullName.vb: Biocs.Collections.Counter(Of T).Clear
  nameWithType: Counter<T>.Clear
  nameWithType.vb: Counter(Of T).Clear
- uid: Biocs.Collections.Counter`1.Comparer
  name: Comparer
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Comparer
  commentId: P:Biocs.Collections.Counter`1.Comparer
  fullName: Biocs.Collections.Counter<T>.Comparer
  fullName.vb: Biocs.Collections.Counter(Of T).Comparer
  nameWithType: Counter<T>.Comparer
  nameWithType.vb: Counter(Of T).Comparer
- uid: Biocs.Collections.Counter`1.Comparer*
  name: Comparer
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Comparer_
  commentId: Overload:Biocs.Collections.Counter`1.Comparer
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.Comparer
  fullName.vb: Biocs.Collections.Counter(Of T).Comparer
  nameWithType: Counter<T>.Comparer
  nameWithType.vb: Counter(Of T).Comparer
- uid: Biocs.Collections.Counter`1.Contains(`0)
  name: Contains(T)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Contains__0_
  commentId: M:Biocs.Collections.Counter`1.Contains(`0)
  fullName: Biocs.Collections.Counter<T>.Contains(T)
  fullName.vb: Biocs.Collections.Counter(Of T).Contains(T)
  nameWithType: Counter<T>.Contains(T)
  nameWithType.vb: Counter(Of T).Contains(T)
- uid: Biocs.Collections.Counter`1.Contains*
  name: Contains
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Contains_
  commentId: Overload:Biocs.Collections.Counter`1.Contains
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.Contains
  fullName.vb: Biocs.Collections.Counter(Of T).Contains
  nameWithType: Counter<T>.Contains
  nameWithType.vb: Counter(Of T).Contains
- uid: Biocs.Collections.Counter`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], int)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_CopyTo__0___System_Int32_
  commentId: M:Biocs.Collections.Counter`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Integer)
  fullName: Biocs.Collections.Counter<T>.CopyTo(T[], int)
  fullName.vb: Biocs.Collections.Counter(Of T).CopyTo(T(), Integer)
  nameWithType: Counter<T>.CopyTo(T[], int)
  nameWithType.vb: Counter(Of T).CopyTo(T(), Integer)
- uid: Biocs.Collections.Counter`1.CopyTo*
  name: CopyTo
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_CopyTo_
  commentId: Overload:Biocs.Collections.Counter`1.CopyTo
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.CopyTo
  fullName.vb: Biocs.Collections.Counter(Of T).CopyTo
  nameWithType: Counter<T>.CopyTo
  nameWithType.vb: Counter(Of T).CopyTo
- uid: Biocs.Collections.Counter`1.GetCount(`0)
  name: GetCount(T)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_GetCount__0_
  commentId: M:Biocs.Collections.Counter`1.GetCount(`0)
  fullName: Biocs.Collections.Counter<T>.GetCount(T)
  fullName.vb: Biocs.Collections.Counter(Of T).GetCount(T)
  nameWithType: Counter<T>.GetCount(T)
  nameWithType.vb: Counter(Of T).GetCount(T)
- uid: Biocs.Collections.Counter`1.GetCount*
  name: GetCount
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_GetCount_
  commentId: Overload:Biocs.Collections.Counter`1.GetCount
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.GetCount
  fullName.vb: Biocs.Collections.Counter(Of T).GetCount
  nameWithType: Counter<T>.GetCount
  nameWithType.vb: Counter(Of T).GetCount
- uid: Biocs.Collections.Counter`1.NumberOfItems
  name: NumberOfItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_NumberOfItems
  commentId: P:Biocs.Collections.Counter`1.NumberOfItems
  fullName: Biocs.Collections.Counter<T>.NumberOfItems
  fullName.vb: Biocs.Collections.Counter(Of T).NumberOfItems
  nameWithType: Counter<T>.NumberOfItems
  nameWithType.vb: Counter(Of T).NumberOfItems
- uid: Biocs.Collections.Counter`1.NumberOfItems*
  name: NumberOfItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_NumberOfItems_
  commentId: Overload:Biocs.Collections.Counter`1.NumberOfItems
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.NumberOfItems
  fullName.vb: Biocs.Collections.Counter(Of T).NumberOfItems
  nameWithType: Counter<T>.NumberOfItems
  nameWithType.vb: Counter(Of T).NumberOfItems
- uid: Biocs.Collections.Counter`1.Remove(`0)
  name: Remove(T)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Remove__0_
  commentId: M:Biocs.Collections.Counter`1.Remove(`0)
  fullName: Biocs.Collections.Counter<T>.Remove(T)
  fullName.vb: Biocs.Collections.Counter(Of T).Remove(T)
  nameWithType: Counter<T>.Remove(T)
  nameWithType.vb: Counter(Of T).Remove(T)
- uid: Biocs.Collections.Counter`1.Remove(`0,System.Int32)
  name: Remove(T, int)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Remove__0_System_Int32_
  commentId: M:Biocs.Collections.Counter`1.Remove(`0,System.Int32)
  name.vb: Remove(T, Integer)
  fullName: Biocs.Collections.Counter<T>.Remove(T, int)
  fullName.vb: Biocs.Collections.Counter(Of T).Remove(T, Integer)
  nameWithType: Counter<T>.Remove(T, int)
  nameWithType.vb: Counter(Of T).Remove(T, Integer)
- uid: Biocs.Collections.Counter`1.Remove*
  name: Remove
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_Remove_
  commentId: Overload:Biocs.Collections.Counter`1.Remove
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.Remove
  fullName.vb: Biocs.Collections.Counter(Of T).Remove
  nameWithType: Counter<T>.Remove
  nameWithType.vb: Counter(Of T).Remove
- uid: Biocs.Collections.Counter`1.RepeatedItems
  name: RepeatedItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_RepeatedItems
  commentId: P:Biocs.Collections.Counter`1.RepeatedItems
  fullName: Biocs.Collections.Counter<T>.RepeatedItems
  fullName.vb: Biocs.Collections.Counter(Of T).RepeatedItems
  nameWithType: Counter<T>.RepeatedItems
  nameWithType.vb: Counter(Of T).RepeatedItems
- uid: Biocs.Collections.Counter`1.RepeatedItems*
  name: RepeatedItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_RepeatedItems_
  commentId: Overload:Biocs.Collections.Counter`1.RepeatedItems
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.RepeatedItems
  fullName.vb: Biocs.Collections.Counter(Of T).RepeatedItems
  nameWithType: Counter<T>.RepeatedItems
  nameWithType.vb: Counter(Of T).RepeatedItems
- uid: Biocs.Collections.Counter`1.ResetCount(`0)
  name: ResetCount(T)
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_ResetCount__0_
  commentId: M:Biocs.Collections.Counter`1.ResetCount(`0)
  fullName: Biocs.Collections.Counter<T>.ResetCount(T)
  fullName.vb: Biocs.Collections.Counter(Of T).ResetCount(T)
  nameWithType: Counter<T>.ResetCount(T)
  nameWithType.vb: Counter(Of T).ResetCount(T)
- uid: Biocs.Collections.Counter`1.ResetCount*
  name: ResetCount
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_ResetCount_
  commentId: Overload:Biocs.Collections.Counter`1.ResetCount
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.ResetCount
  fullName.vb: Biocs.Collections.Counter(Of T).ResetCount
  nameWithType: Counter<T>.ResetCount
  nameWithType.vb: Counter(Of T).ResetCount
- uid: Biocs.Collections.Counter`1.ResetCounts
  name: ResetCounts()
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_ResetCounts
  commentId: M:Biocs.Collections.Counter`1.ResetCounts
  fullName: Biocs.Collections.Counter<T>.ResetCounts()
  fullName.vb: Biocs.Collections.Counter(Of T).ResetCounts()
  nameWithType: Counter<T>.ResetCounts()
  nameWithType.vb: Counter(Of T).ResetCounts()
- uid: Biocs.Collections.Counter`1.ResetCounts*
  name: ResetCounts
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_ResetCounts_
  commentId: Overload:Biocs.Collections.Counter`1.ResetCounts
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.ResetCounts
  fullName.vb: Biocs.Collections.Counter(Of T).ResetCounts
  nameWithType: Counter<T>.ResetCounts
  nameWithType.vb: Counter(Of T).ResetCounts
- uid: Biocs.Collections.Counter`1.TotalCount
  name: TotalCount
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_TotalCount
  commentId: P:Biocs.Collections.Counter`1.TotalCount
  fullName: Biocs.Collections.Counter<T>.TotalCount
  fullName.vb: Biocs.Collections.Counter(Of T).TotalCount
  nameWithType: Counter<T>.TotalCount
  nameWithType.vb: Counter(Of T).TotalCount
- uid: Biocs.Collections.Counter`1.TotalCount*
  name: TotalCount
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_TotalCount_
  commentId: Overload:Biocs.Collections.Counter`1.TotalCount
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.TotalCount
  fullName.vb: Biocs.Collections.Counter(Of T).TotalCount
  nameWithType: Counter<T>.TotalCount
  nameWithType.vb: Counter(Of T).TotalCount
- uid: Biocs.Collections.Counter`1.UniqueItems
  name: UniqueItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_UniqueItems
  commentId: P:Biocs.Collections.Counter`1.UniqueItems
  fullName: Biocs.Collections.Counter<T>.UniqueItems
  fullName.vb: Biocs.Collections.Counter(Of T).UniqueItems
  nameWithType: Counter<T>.UniqueItems
  nameWithType.vb: Counter(Of T).UniqueItems
- uid: Biocs.Collections.Counter`1.UniqueItems*
  name: UniqueItems
  href: api/Biocs.Collections.Counter-1.html#Biocs_Collections_Counter_1_UniqueItems_
  commentId: Overload:Biocs.Collections.Counter`1.UniqueItems
  isSpec: "True"
  fullName: Biocs.Collections.Counter<T>.UniqueItems
  fullName.vb: Biocs.Collections.Counter(Of T).UniqueItems
  nameWithType: Counter<T>.UniqueItems
  nameWithType.vb: Counter(Of T).UniqueItems
- uid: Biocs.Collections.Deque`1
  name: Deque<T>
  href: api/Biocs.Collections.Deque-1.html
  commentId: T:Biocs.Collections.Deque`1
  name.vb: Deque(Of T)
  fullName: Biocs.Collections.Deque<T>
  fullName.vb: Biocs.Collections.Deque(Of T)
  nameWithType: Deque<T>
  nameWithType.vb: Deque(Of T)
- uid: Biocs.Collections.Deque`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: Deque(IEnumerable<T>)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Biocs.Collections.Deque`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: New(IEnumerable(Of T))
  fullName: Biocs.Collections.Deque<T>.Deque(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Biocs.Collections.Deque(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.Deque(IEnumerable<T>)
  nameWithType.vb: Deque(Of T).New(IEnumerable(Of T))
- uid: Biocs.Collections.Deque`1.#ctor(System.Int32)
  name: Deque(int)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1__ctor_System_Int32_
  commentId: M:Biocs.Collections.Deque`1.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: Biocs.Collections.Deque<T>.Deque(int)
  fullName.vb: Biocs.Collections.Deque(Of T).New(Integer)
  nameWithType: Deque<T>.Deque(int)
  nameWithType.vb: Deque(Of T).New(Integer)
- uid: Biocs.Collections.Deque`1.#ctor*
  name: Deque
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1__ctor_
  commentId: Overload:Biocs.Collections.Deque`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.Collections.Deque<T>.Deque
  fullName.vb: Biocs.Collections.Deque(Of T).New
  nameWithType: Deque<T>.Deque
  nameWithType.vb: Deque(Of T).New
- uid: Biocs.Collections.Deque`1.AddFirst(`0)
  name: AddFirst(T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_AddFirst__0_
  commentId: M:Biocs.Collections.Deque`1.AddFirst(`0)
  fullName: Biocs.Collections.Deque<T>.AddFirst(T)
  fullName.vb: Biocs.Collections.Deque(Of T).AddFirst(T)
  nameWithType: Deque<T>.AddFirst(T)
  nameWithType.vb: Deque(Of T).AddFirst(T)
- uid: Biocs.Collections.Deque`1.AddFirst*
  name: AddFirst
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_AddFirst_
  commentId: Overload:Biocs.Collections.Deque`1.AddFirst
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.AddFirst
  fullName.vb: Biocs.Collections.Deque(Of T).AddFirst
  nameWithType: Deque<T>.AddFirst
  nameWithType.vb: Deque(Of T).AddFirst
- uid: Biocs.Collections.Deque`1.AddLast(`0)
  name: AddLast(T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_AddLast__0_
  commentId: M:Biocs.Collections.Deque`1.AddLast(`0)
  fullName: Biocs.Collections.Deque<T>.AddLast(T)
  fullName.vb: Biocs.Collections.Deque(Of T).AddLast(T)
  nameWithType: Deque<T>.AddLast(T)
  nameWithType.vb: Deque(Of T).AddLast(T)
- uid: Biocs.Collections.Deque`1.AddLast*
  name: AddLast
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_AddLast_
  commentId: Overload:Biocs.Collections.Deque`1.AddLast
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.AddLast
  fullName.vb: Biocs.Collections.Deque(Of T).AddLast
  nameWithType: Deque<T>.AddLast
  nameWithType.vb: Deque(Of T).AddLast
- uid: Biocs.Collections.Deque`1.Capacity
  name: Capacity
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Capacity
  commentId: P:Biocs.Collections.Deque`1.Capacity
  fullName: Biocs.Collections.Deque<T>.Capacity
  fullName.vb: Biocs.Collections.Deque(Of T).Capacity
  nameWithType: Deque<T>.Capacity
  nameWithType.vb: Deque(Of T).Capacity
- uid: Biocs.Collections.Deque`1.Capacity*
  name: Capacity
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Capacity_
  commentId: Overload:Biocs.Collections.Deque`1.Capacity
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Capacity
  fullName.vb: Biocs.Collections.Deque(Of T).Capacity
  nameWithType: Deque<T>.Capacity
  nameWithType.vb: Deque(Of T).Capacity
- uid: Biocs.Collections.Deque`1.Clear
  name: Clear()
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Clear
  commentId: M:Biocs.Collections.Deque`1.Clear
  fullName: Biocs.Collections.Deque<T>.Clear()
  fullName.vb: Biocs.Collections.Deque(Of T).Clear()
  nameWithType: Deque<T>.Clear()
  nameWithType.vb: Deque(Of T).Clear()
- uid: Biocs.Collections.Deque`1.Clear*
  name: Clear
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Clear_
  commentId: Overload:Biocs.Collections.Deque`1.Clear
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Clear
  fullName.vb: Biocs.Collections.Deque(Of T).Clear
  nameWithType: Deque<T>.Clear
  nameWithType.vb: Deque(Of T).Clear
- uid: Biocs.Collections.Deque`1.Contains(`0)
  name: Contains(T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Contains__0_
  commentId: M:Biocs.Collections.Deque`1.Contains(`0)
  fullName: Biocs.Collections.Deque<T>.Contains(T)
  fullName.vb: Biocs.Collections.Deque(Of T).Contains(T)
  nameWithType: Deque<T>.Contains(T)
  nameWithType.vb: Deque(Of T).Contains(T)
- uid: Biocs.Collections.Deque`1.Contains*
  name: Contains
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Contains_
  commentId: Overload:Biocs.Collections.Deque`1.Contains
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Contains
  fullName.vb: Biocs.Collections.Deque(Of T).Contains
  nameWithType: Deque<T>.Contains
  nameWithType.vb: Deque(Of T).Contains
- uid: Biocs.Collections.Deque`1.CopyTo(System.Int32,System.Span{`0},System.Int32)
  name: CopyTo(int, Span<T>, int)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_CopyTo_System_Int32_System_Span__0__System_Int32_
  commentId: M:Biocs.Collections.Deque`1.CopyTo(System.Int32,System.Span{`0},System.Int32)
  name.vb: CopyTo(Integer, Span(Of T), Integer)
  fullName: Biocs.Collections.Deque<T>.CopyTo(int, System.Span<T>, int)
  fullName.vb: Biocs.Collections.Deque(Of T).CopyTo(Integer, System.Span(Of T), Integer)
  nameWithType: Deque<T>.CopyTo(int, Span<T>, int)
  nameWithType.vb: Deque(Of T).CopyTo(Integer, Span(Of T), Integer)
- uid: Biocs.Collections.Deque`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], int)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_CopyTo__0___System_Int32_
  commentId: M:Biocs.Collections.Deque`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Integer)
  fullName: Biocs.Collections.Deque<T>.CopyTo(T[], int)
  fullName.vb: Biocs.Collections.Deque(Of T).CopyTo(T(), Integer)
  nameWithType: Deque<T>.CopyTo(T[], int)
  nameWithType.vb: Deque(Of T).CopyTo(T(), Integer)
- uid: Biocs.Collections.Deque`1.CopyTo*
  name: CopyTo
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_CopyTo_
  commentId: Overload:Biocs.Collections.Deque`1.CopyTo
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.CopyTo
  fullName.vb: Biocs.Collections.Deque(Of T).CopyTo
  nameWithType: Deque<T>.CopyTo
  nameWithType.vb: Deque(Of T).CopyTo
- uid: Biocs.Collections.Deque`1.Count
  name: Count
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Count
  commentId: P:Biocs.Collections.Deque`1.Count
  fullName: Biocs.Collections.Deque<T>.Count
  fullName.vb: Biocs.Collections.Deque(Of T).Count
  nameWithType: Deque<T>.Count
  nameWithType.vb: Deque(Of T).Count
- uid: Biocs.Collections.Deque`1.Count*
  name: Count
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Count_
  commentId: Overload:Biocs.Collections.Deque`1.Count
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Count
  fullName.vb: Biocs.Collections.Deque(Of T).Count
  nameWithType: Deque<T>.Count
  nameWithType.vb: Deque(Of T).Count
- uid: Biocs.Collections.Deque`1.First
  name: First
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_First
  commentId: P:Biocs.Collections.Deque`1.First
  fullName: Biocs.Collections.Deque<T>.First
  fullName.vb: Biocs.Collections.Deque(Of T).First
  nameWithType: Deque<T>.First
  nameWithType.vb: Deque(Of T).First
- uid: Biocs.Collections.Deque`1.First*
  name: First
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_First_
  commentId: Overload:Biocs.Collections.Deque`1.First
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.First
  fullName.vb: Biocs.Collections.Deque(Of T).First
  nameWithType: Deque<T>.First
  nameWithType.vb: Deque(Of T).First
- uid: Biocs.Collections.Deque`1.GetEnumerator
  name: GetEnumerator()
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_GetEnumerator
  commentId: M:Biocs.Collections.Deque`1.GetEnumerator
  fullName: Biocs.Collections.Deque<T>.GetEnumerator()
  fullName.vb: Biocs.Collections.Deque(Of T).GetEnumerator()
  nameWithType: Deque<T>.GetEnumerator()
  nameWithType.vb: Deque(Of T).GetEnumerator()
- uid: Biocs.Collections.Deque`1.GetEnumerator*
  name: GetEnumerator
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_GetEnumerator_
  commentId: Overload:Biocs.Collections.Deque`1.GetEnumerator
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.GetEnumerator
  fullName.vb: Biocs.Collections.Deque(Of T).GetEnumerator
  nameWithType: Deque<T>.GetEnumerator
  nameWithType.vb: Deque(Of T).GetEnumerator
- uid: Biocs.Collections.Deque`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_IndexOf__0_
  commentId: M:Biocs.Collections.Deque`1.IndexOf(`0)
  fullName: Biocs.Collections.Deque<T>.IndexOf(T)
  fullName.vb: Biocs.Collections.Deque(Of T).IndexOf(T)
  nameWithType: Deque<T>.IndexOf(T)
  nameWithType.vb: Deque(Of T).IndexOf(T)
- uid: Biocs.Collections.Deque`1.IndexOf*
  name: IndexOf
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_IndexOf_
  commentId: Overload:Biocs.Collections.Deque`1.IndexOf
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.IndexOf
  fullName.vb: Biocs.Collections.Deque(Of T).IndexOf
  nameWithType: Deque<T>.IndexOf
  nameWithType.vb: Deque(Of T).IndexOf
- uid: Biocs.Collections.Deque`1.Insert(System.Int32,`0)
  name: Insert(int, T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Insert_System_Int32__0_
  commentId: M:Biocs.Collections.Deque`1.Insert(System.Int32,`0)
  name.vb: Insert(Integer, T)
  fullName: Biocs.Collections.Deque<T>.Insert(int, T)
  fullName.vb: Biocs.Collections.Deque(Of T).Insert(Integer, T)
  nameWithType: Deque<T>.Insert(int, T)
  nameWithType.vb: Deque(Of T).Insert(Integer, T)
- uid: Biocs.Collections.Deque`1.Insert*
  name: Insert
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Insert_
  commentId: Overload:Biocs.Collections.Deque`1.Insert
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Insert
  fullName.vb: Biocs.Collections.Deque(Of T).Insert
  nameWithType: Deque<T>.Insert
  nameWithType.vb: Deque(Of T).Insert
- uid: Biocs.Collections.Deque`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(int, IEnumerable<T>)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_InsertRange_System_Int32_System_Collections_Generic_IEnumerable__0__
  commentId: M:Biocs.Collections.Deque`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name.vb: InsertRange(Integer, IEnumerable(Of T))
  fullName: Biocs.Collections.Deque<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Biocs.Collections.Deque(Of T).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.InsertRange(int, IEnumerable<T>)
  nameWithType.vb: Deque(Of T).InsertRange(Integer, IEnumerable(Of T))
- uid: Biocs.Collections.Deque`1.InsertRange*
  name: InsertRange
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_InsertRange_
  commentId: Overload:Biocs.Collections.Deque`1.InsertRange
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.InsertRange
  fullName.vb: Biocs.Collections.Deque(Of T).InsertRange
  nameWithType: Deque<T>.InsertRange
  nameWithType.vb: Deque(Of T).InsertRange
- uid: Biocs.Collections.Deque`1.Item(System.Int32)
  name: this[int]
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Item_System_Int32_
  commentId: P:Biocs.Collections.Deque`1.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Biocs.Collections.Deque<T>.this[int]
  fullName.vb: Biocs.Collections.Deque(Of T).this[](Integer)
  nameWithType: Deque<T>.this[int]
  nameWithType.vb: Deque(Of T).this[](Integer)
- uid: Biocs.Collections.Deque`1.Item*
  name: this
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Item_
  commentId: Overload:Biocs.Collections.Deque`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Biocs.Collections.Deque<T>.this
  fullName.vb: Biocs.Collections.Deque(Of T).this[]
  nameWithType: Deque<T>.this
  nameWithType.vb: Deque(Of T).this[]
- uid: Biocs.Collections.Deque`1.Last
  name: Last
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Last
  commentId: P:Biocs.Collections.Deque`1.Last
  fullName: Biocs.Collections.Deque<T>.Last
  fullName.vb: Biocs.Collections.Deque(Of T).Last
  nameWithType: Deque<T>.Last
  nameWithType.vb: Deque(Of T).Last
- uid: Biocs.Collections.Deque`1.Last*
  name: Last
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Last_
  commentId: Overload:Biocs.Collections.Deque`1.Last
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Last
  fullName.vb: Biocs.Collections.Deque(Of T).Last
  nameWithType: Deque<T>.Last
  nameWithType.vb: Deque(Of T).Last
- uid: Biocs.Collections.Deque`1.Remove(`0)
  name: Remove(T)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Remove__0_
  commentId: M:Biocs.Collections.Deque`1.Remove(`0)
  fullName: Biocs.Collections.Deque<T>.Remove(T)
  fullName.vb: Biocs.Collections.Deque(Of T).Remove(T)
  nameWithType: Deque<T>.Remove(T)
  nameWithType.vb: Deque(Of T).Remove(T)
- uid: Biocs.Collections.Deque`1.Remove*
  name: Remove
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_Remove_
  commentId: Overload:Biocs.Collections.Deque`1.Remove
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.Remove
  fullName.vb: Biocs.Collections.Deque(Of T).Remove
  nameWithType: Deque<T>.Remove
  nameWithType.vb: Deque(Of T).Remove
- uid: Biocs.Collections.Deque`1.RemoveAt(System.Int32)
  name: RemoveAt(int)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveAt_System_Int32_
  commentId: M:Biocs.Collections.Deque`1.RemoveAt(System.Int32)
  name.vb: RemoveAt(Integer)
  fullName: Biocs.Collections.Deque<T>.RemoveAt(int)
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveAt(Integer)
  nameWithType: Deque<T>.RemoveAt(int)
  nameWithType.vb: Deque(Of T).RemoveAt(Integer)
- uid: Biocs.Collections.Deque`1.RemoveAt*
  name: RemoveAt
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveAt_
  commentId: Overload:Biocs.Collections.Deque`1.RemoveAt
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.RemoveAt
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveAt
  nameWithType: Deque<T>.RemoveAt
  nameWithType.vb: Deque(Of T).RemoveAt
- uid: Biocs.Collections.Deque`1.RemoveFirst
  name: RemoveFirst()
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveFirst
  commentId: M:Biocs.Collections.Deque`1.RemoveFirst
  fullName: Biocs.Collections.Deque<T>.RemoveFirst()
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveFirst()
  nameWithType: Deque<T>.RemoveFirst()
  nameWithType.vb: Deque(Of T).RemoveFirst()
- uid: Biocs.Collections.Deque`1.RemoveFirst*
  name: RemoveFirst
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveFirst_
  commentId: Overload:Biocs.Collections.Deque`1.RemoveFirst
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.RemoveFirst
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveFirst
  nameWithType: Deque<T>.RemoveFirst
  nameWithType.vb: Deque(Of T).RemoveFirst
- uid: Biocs.Collections.Deque`1.RemoveLast
  name: RemoveLast()
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveLast
  commentId: M:Biocs.Collections.Deque`1.RemoveLast
  fullName: Biocs.Collections.Deque<T>.RemoveLast()
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveLast()
  nameWithType: Deque<T>.RemoveLast()
  nameWithType.vb: Deque(Of T).RemoveLast()
- uid: Biocs.Collections.Deque`1.RemoveLast*
  name: RemoveLast
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveLast_
  commentId: Overload:Biocs.Collections.Deque`1.RemoveLast
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.RemoveLast
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveLast
  nameWithType: Deque<T>.RemoveLast
  nameWithType.vb: Deque(Of T).RemoveLast
- uid: Biocs.Collections.Deque`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(int, int)
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveRange_System_Int32_System_Int32_
  commentId: M:Biocs.Collections.Deque`1.RemoveRange(System.Int32,System.Int32)
  name.vb: RemoveRange(Integer, Integer)
  fullName: Biocs.Collections.Deque<T>.RemoveRange(int, int)
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveRange(Integer, Integer)
  nameWithType: Deque<T>.RemoveRange(int, int)
  nameWithType.vb: Deque(Of T).RemoveRange(Integer, Integer)
- uid: Biocs.Collections.Deque`1.RemoveRange*
  name: RemoveRange
  href: api/Biocs.Collections.Deque-1.html#Biocs_Collections_Deque_1_RemoveRange_
  commentId: Overload:Biocs.Collections.Deque`1.RemoveRange
  isSpec: "True"
  fullName: Biocs.Collections.Deque<T>.RemoveRange
  fullName.vb: Biocs.Collections.Deque(Of T).RemoveRange
  nameWithType: Deque<T>.RemoveRange
  nameWithType.vb: Deque(Of T).RemoveRange
- uid: Biocs.Collections.IndexedValueCollection`2
  name: IndexedValueCollection<TKey, TValue>
  href: api/Biocs.Collections.IndexedValueCollection-2.html
  commentId: T:Biocs.Collections.IndexedValueCollection`2
  name.vb: IndexedValueCollection(Of TKey, TValue)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue)
  nameWithType: IndexedValueCollection<TKey, TValue>
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue)
- uid: Biocs.Collections.IndexedValueCollection`2.#ctor(System.Collections.Generic.IReadOnlyDictionary{`0,`1},System.Collections.Generic.IReadOnlyList{`0})
  name: IndexedValueCollection(IReadOnlyDictionary<TKey, TValue>, IReadOnlyList<TKey>)
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2__ctor_System_Collections_Generic_IReadOnlyDictionary__0__1__System_Collections_Generic_IReadOnlyList__0__
  commentId: M:Biocs.Collections.IndexedValueCollection`2.#ctor(System.Collections.Generic.IReadOnlyDictionary{`0,`1},System.Collections.Generic.IReadOnlyList{`0})
  name.vb: New(IReadOnlyDictionary(Of TKey, TValue), IReadOnlyList(Of TKey))
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.IndexedValueCollection(System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>, System.Collections.Generic.IReadOnlyList<TKey>)
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).New(System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue), System.Collections.Generic.IReadOnlyList(Of TKey))
  nameWithType: IndexedValueCollection<TKey, TValue>.IndexedValueCollection(IReadOnlyDictionary<TKey, TValue>, IReadOnlyList<TKey>)
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).New(IReadOnlyDictionary(Of TKey, TValue), IReadOnlyList(Of TKey))
- uid: Biocs.Collections.IndexedValueCollection`2.#ctor*
  name: IndexedValueCollection
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2__ctor_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.IndexedValueCollection
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).New
  nameWithType: IndexedValueCollection<TKey, TValue>.IndexedValueCollection
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).New
- uid: Biocs.Collections.IndexedValueCollection`2.Contains(`1)
  name: Contains(TValue?)
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Contains__1_
  commentId: M:Biocs.Collections.IndexedValueCollection`2.Contains(`1)
  name.vb: Contains(TValue)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.Contains(TValue?)
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).Contains(TValue)
  nameWithType: IndexedValueCollection<TKey, TValue>.Contains(TValue?)
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).Contains(TValue)
- uid: Biocs.Collections.IndexedValueCollection`2.Contains*
  name: Contains
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Contains_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.Contains
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.Contains
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).Contains
  nameWithType: IndexedValueCollection<TKey, TValue>.Contains
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).Contains
- uid: Biocs.Collections.IndexedValueCollection`2.CopyTo(`1[],System.Int32)
  name: CopyTo(TValue?[], int)
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_CopyTo__1___System_Int32_
  commentId: M:Biocs.Collections.IndexedValueCollection`2.CopyTo(`1[],System.Int32)
  name.vb: CopyTo(TValue(), Integer)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.CopyTo(TValue?[], int)
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).CopyTo(TValue(), Integer)
  nameWithType: IndexedValueCollection<TKey, TValue>.CopyTo(TValue?[], int)
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).CopyTo(TValue(), Integer)
- uid: Biocs.Collections.IndexedValueCollection`2.CopyTo*
  name: CopyTo
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_CopyTo_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.CopyTo
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.CopyTo
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).CopyTo
  nameWithType: IndexedValueCollection<TKey, TValue>.CopyTo
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).CopyTo
- uid: Biocs.Collections.IndexedValueCollection`2.Count
  name: Count
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Count
  commentId: P:Biocs.Collections.IndexedValueCollection`2.Count
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.Count
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).Count
  nameWithType: IndexedValueCollection<TKey, TValue>.Count
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).Count
- uid: Biocs.Collections.IndexedValueCollection`2.Count*
  name: Count
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Count_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.Count
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.Count
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).Count
  nameWithType: IndexedValueCollection<TKey, TValue>.Count
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).Count
- uid: Biocs.Collections.IndexedValueCollection`2.GetEnumerator
  name: GetEnumerator()
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_GetEnumerator
  commentId: M:Biocs.Collections.IndexedValueCollection`2.GetEnumerator
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.GetEnumerator()
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).GetEnumerator()
  nameWithType: IndexedValueCollection<TKey, TValue>.GetEnumerator()
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).GetEnumerator()
- uid: Biocs.Collections.IndexedValueCollection`2.GetEnumerator*
  name: GetEnumerator
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_GetEnumerator_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.GetEnumerator
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.GetEnumerator
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).GetEnumerator
  nameWithType: IndexedValueCollection<TKey, TValue>.GetEnumerator
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).GetEnumerator
- uid: Biocs.Collections.IndexedValueCollection`2.IndexOf(`1)
  name: IndexOf(TValue?)
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_IndexOf__1_
  commentId: M:Biocs.Collections.IndexedValueCollection`2.IndexOf(`1)
  name.vb: IndexOf(TValue)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.IndexOf(TValue?)
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).IndexOf(TValue)
  nameWithType: IndexedValueCollection<TKey, TValue>.IndexOf(TValue?)
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).IndexOf(TValue)
- uid: Biocs.Collections.IndexedValueCollection`2.IndexOf*
  name: IndexOf
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_IndexOf_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.IndexOf
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.IndexOf
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).IndexOf
  nameWithType: IndexedValueCollection<TKey, TValue>.IndexOf
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).IndexOf
- uid: Biocs.Collections.IndexedValueCollection`2.Item(System.Int32)
  name: this[int]
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Item_System_Int32_
  commentId: P:Biocs.Collections.IndexedValueCollection`2.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.this[int]
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).this[](Integer)
  nameWithType: IndexedValueCollection<TKey, TValue>.this[int]
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).this[](Integer)
- uid: Biocs.Collections.IndexedValueCollection`2.Item*
  name: this
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_Item_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.this
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).this[]
  nameWithType: IndexedValueCollection<TKey, TValue>.this
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).this[]
- uid: Biocs.Collections.IndexedValueCollection`2.TryGetValue(System.Int32,`1@)
  name: TryGetValue(int, out TValue)
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_TryGetValue_System_Int32__1__
  commentId: M:Biocs.Collections.IndexedValueCollection`2.TryGetValue(System.Int32,`1@)
  name.vb: TryGetValue(Integer, TValue)
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.TryGetValue(int, out TValue)
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).TryGetValue(Integer, TValue)
  nameWithType: IndexedValueCollection<TKey, TValue>.TryGetValue(int, out TValue)
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).TryGetValue(Integer, TValue)
- uid: Biocs.Collections.IndexedValueCollection`2.TryGetValue*
  name: TryGetValue
  href: api/Biocs.Collections.IndexedValueCollection-2.html#Biocs_Collections_IndexedValueCollection_2_TryGetValue_
  commentId: Overload:Biocs.Collections.IndexedValueCollection`2.TryGetValue
  isSpec: "True"
  fullName: Biocs.Collections.IndexedValueCollection<TKey, TValue>.TryGetValue
  fullName.vb: Biocs.Collections.IndexedValueCollection(Of TKey, TValue).TryGetValue
  nameWithType: IndexedValueCollection<TKey, TValue>.TryGetValue
  nameWithType.vb: IndexedValueCollection(Of TKey, TValue).TryGetValue
- uid: Biocs.DnaBase
  name: DnaBase
  href: api/Biocs.DnaBase.html
  commentId: T:Biocs.DnaBase
  fullName: Biocs.DnaBase
  nameWithType: DnaBase
- uid: Biocs.DnaBase.Adenine
  name: Adenine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Adenine
  commentId: P:Biocs.DnaBase.Adenine
  fullName: Biocs.DnaBase.Adenine
  nameWithType: DnaBase.Adenine
- uid: Biocs.DnaBase.Adenine*
  name: Adenine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Adenine_
  commentId: Overload:Biocs.DnaBase.Adenine
  isSpec: "True"
  fullName: Biocs.DnaBase.Adenine
  nameWithType: DnaBase.Adenine
- uid: Biocs.DnaBase.Any
  name: Any
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Any
  commentId: P:Biocs.DnaBase.Any
  fullName: Biocs.DnaBase.Any
  nameWithType: DnaBase.Any
- uid: Biocs.DnaBase.Any*
  name: Any
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Any_
  commentId: Overload:Biocs.DnaBase.Any
  isSpec: "True"
  fullName: Biocs.DnaBase.Any
  nameWithType: DnaBase.Any
- uid: Biocs.DnaBase.Complement
  name: Complement()
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Complement
  commentId: M:Biocs.DnaBase.Complement
  fullName: Biocs.DnaBase.Complement()
  nameWithType: DnaBase.Complement()
- uid: Biocs.DnaBase.Complement*
  name: Complement
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Complement_
  commentId: Overload:Biocs.DnaBase.Complement
  isSpec: "True"
  fullName: Biocs.DnaBase.Complement
  nameWithType: DnaBase.Complement
- uid: Biocs.DnaBase.Cytosine
  name: Cytosine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Cytosine
  commentId: P:Biocs.DnaBase.Cytosine
  fullName: Biocs.DnaBase.Cytosine
  nameWithType: DnaBase.Cytosine
- uid: Biocs.DnaBase.Cytosine*
  name: Cytosine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Cytosine_
  commentId: Overload:Biocs.DnaBase.Cytosine
  isSpec: "True"
  fullName: Biocs.DnaBase.Cytosine
  nameWithType: DnaBase.Cytosine
- uid: Biocs.DnaBase.Equals(Biocs.DnaBase)
  name: Equals(DnaBase)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Equals_Biocs_DnaBase_
  commentId: M:Biocs.DnaBase.Equals(Biocs.DnaBase)
  fullName: Biocs.DnaBase.Equals(Biocs.DnaBase)
  nameWithType: DnaBase.Equals(DnaBase)
- uid: Biocs.DnaBase.Equals(System.Object)
  name: Equals(object?)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Equals_System_Object_
  commentId: M:Biocs.DnaBase.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Biocs.DnaBase.Equals(object?)
  fullName.vb: Biocs.DnaBase.Equals(Object)
  nameWithType: DnaBase.Equals(object?)
  nameWithType.vb: DnaBase.Equals(Object)
- uid: Biocs.DnaBase.Equals*
  name: Equals
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Equals_
  commentId: Overload:Biocs.DnaBase.Equals
  isSpec: "True"
  fullName: Biocs.DnaBase.Equals
  nameWithType: DnaBase.Equals
- uid: Biocs.DnaBase.EqualsCaseInsensitive(Biocs.DnaBase)
  name: EqualsCaseInsensitive(DnaBase)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_EqualsCaseInsensitive_Biocs_DnaBase_
  commentId: M:Biocs.DnaBase.EqualsCaseInsensitive(Biocs.DnaBase)
  fullName: Biocs.DnaBase.EqualsCaseInsensitive(Biocs.DnaBase)
  nameWithType: DnaBase.EqualsCaseInsensitive(DnaBase)
- uid: Biocs.DnaBase.EqualsCaseInsensitive*
  name: EqualsCaseInsensitive
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_EqualsCaseInsensitive_
  commentId: Overload:Biocs.DnaBase.EqualsCaseInsensitive
  isSpec: "True"
  fullName: Biocs.DnaBase.EqualsCaseInsensitive
  nameWithType: DnaBase.EqualsCaseInsensitive
- uid: Biocs.DnaBase.Gap
  name: Gap
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Gap
  commentId: P:Biocs.DnaBase.Gap
  fullName: Biocs.DnaBase.Gap
  nameWithType: DnaBase.Gap
- uid: Biocs.DnaBase.Gap*
  name: Gap
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Gap_
  commentId: Overload:Biocs.DnaBase.Gap
  isSpec: "True"
  fullName: Biocs.DnaBase.Gap
  nameWithType: DnaBase.Gap
- uid: Biocs.DnaBase.GetHashCode
  name: GetHashCode()
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_GetHashCode
  commentId: M:Biocs.DnaBase.GetHashCode
  fullName: Biocs.DnaBase.GetHashCode()
  nameWithType: DnaBase.GetHashCode()
- uid: Biocs.DnaBase.GetHashCode*
  name: GetHashCode
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_GetHashCode_
  commentId: Overload:Biocs.DnaBase.GetHashCode
  isSpec: "True"
  fullName: Biocs.DnaBase.GetHashCode
  nameWithType: DnaBase.GetHashCode
- uid: Biocs.DnaBase.Guanine
  name: Guanine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Guanine
  commentId: P:Biocs.DnaBase.Guanine
  fullName: Biocs.DnaBase.Guanine
  nameWithType: DnaBase.Guanine
- uid: Biocs.DnaBase.Guanine*
  name: Guanine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Guanine_
  commentId: Overload:Biocs.DnaBase.Guanine
  isSpec: "True"
  fullName: Biocs.DnaBase.Guanine
  nameWithType: DnaBase.Guanine
- uid: Biocs.DnaBase.IsAtomic
  name: IsAtomic
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsAtomic
  commentId: P:Biocs.DnaBase.IsAtomic
  fullName: Biocs.DnaBase.IsAtomic
  nameWithType: DnaBase.IsAtomic
- uid: Biocs.DnaBase.IsAtomic*
  name: IsAtomic
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsAtomic_
  commentId: Overload:Biocs.DnaBase.IsAtomic
  isSpec: "True"
  fullName: Biocs.DnaBase.IsAtomic
  nameWithType: DnaBase.IsAtomic
- uid: Biocs.DnaBase.IsGap
  name: IsGap
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsGap
  commentId: P:Biocs.DnaBase.IsGap
  fullName: Biocs.DnaBase.IsGap
  nameWithType: DnaBase.IsGap
- uid: Biocs.DnaBase.IsGap*
  name: IsGap
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsGap_
  commentId: Overload:Biocs.DnaBase.IsGap
  isSpec: "True"
  fullName: Biocs.DnaBase.IsGap
  nameWithType: DnaBase.IsGap
- uid: Biocs.DnaBase.IsLower
  name: IsLower
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsLower
  commentId: P:Biocs.DnaBase.IsLower
  fullName: Biocs.DnaBase.IsLower
  nameWithType: DnaBase.IsLower
- uid: Biocs.DnaBase.IsLower*
  name: IsLower
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsLower_
  commentId: Overload:Biocs.DnaBase.IsLower
  isSpec: "True"
  fullName: Biocs.DnaBase.IsLower
  nameWithType: DnaBase.IsLower
- uid: Biocs.DnaBase.IsUpper
  name: IsUpper
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsUpper
  commentId: P:Biocs.DnaBase.IsUpper
  fullName: Biocs.DnaBase.IsUpper
  nameWithType: DnaBase.IsUpper
- uid: Biocs.DnaBase.IsUpper*
  name: IsUpper
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_IsUpper_
  commentId: Overload:Biocs.DnaBase.IsUpper
  isSpec: "True"
  fullName: Biocs.DnaBase.IsUpper
  nameWithType: DnaBase.IsUpper
- uid: Biocs.DnaBase.Name
  name: Name
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Name
  commentId: P:Biocs.DnaBase.Name
  fullName: Biocs.DnaBase.Name
  nameWithType: DnaBase.Name
- uid: Biocs.DnaBase.Name*
  name: Name
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Name_
  commentId: Overload:Biocs.DnaBase.Name
  isSpec: "True"
  fullName: Biocs.DnaBase.Name
  nameWithType: DnaBase.Name
- uid: Biocs.DnaBase.Parse(System.Char)
  name: Parse(char)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Parse_System_Char_
  commentId: M:Biocs.DnaBase.Parse(System.Char)
  name.vb: Parse(Char)
  fullName: Biocs.DnaBase.Parse(char)
  fullName.vb: Biocs.DnaBase.Parse(Char)
  nameWithType: DnaBase.Parse(char)
  nameWithType.vb: DnaBase.Parse(Char)
- uid: Biocs.DnaBase.Parse*
  name: Parse
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Parse_
  commentId: Overload:Biocs.DnaBase.Parse
  isSpec: "True"
  fullName: Biocs.DnaBase.Parse
  nameWithType: DnaBase.Parse
- uid: Biocs.DnaBase.Symbol
  name: Symbol
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Symbol
  commentId: P:Biocs.DnaBase.Symbol
  fullName: Biocs.DnaBase.Symbol
  nameWithType: DnaBase.Symbol
- uid: Biocs.DnaBase.Symbol*
  name: Symbol
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Symbol_
  commentId: Overload:Biocs.DnaBase.Symbol
  isSpec: "True"
  fullName: Biocs.DnaBase.Symbol
  nameWithType: DnaBase.Symbol
- uid: Biocs.DnaBase.Thymine
  name: Thymine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Thymine
  commentId: P:Biocs.DnaBase.Thymine
  fullName: Biocs.DnaBase.Thymine
  nameWithType: DnaBase.Thymine
- uid: Biocs.DnaBase.Thymine*
  name: Thymine
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_Thymine_
  commentId: Overload:Biocs.DnaBase.Thymine
  isSpec: "True"
  fullName: Biocs.DnaBase.Thymine
  nameWithType: DnaBase.Thymine
- uid: Biocs.DnaBase.ToLower
  name: ToLower()
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToLower
  commentId: M:Biocs.DnaBase.ToLower
  fullName: Biocs.DnaBase.ToLower()
  nameWithType: DnaBase.ToLower()
- uid: Biocs.DnaBase.ToLower*
  name: ToLower
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToLower_
  commentId: Overload:Biocs.DnaBase.ToLower
  isSpec: "True"
  fullName: Biocs.DnaBase.ToLower
  nameWithType: DnaBase.ToLower
- uid: Biocs.DnaBase.ToString
  name: ToString()
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToString
  commentId: M:Biocs.DnaBase.ToString
  fullName: Biocs.DnaBase.ToString()
  nameWithType: DnaBase.ToString()
- uid: Biocs.DnaBase.ToString*
  name: ToString
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToString_
  commentId: Overload:Biocs.DnaBase.ToString
  isSpec: "True"
  fullName: Biocs.DnaBase.ToString
  nameWithType: DnaBase.ToString
- uid: Biocs.DnaBase.ToUpper
  name: ToUpper()
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToUpper
  commentId: M:Biocs.DnaBase.ToUpper
  fullName: Biocs.DnaBase.ToUpper()
  nameWithType: DnaBase.ToUpper()
- uid: Biocs.DnaBase.ToUpper*
  name: ToUpper
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_ToUpper_
  commentId: Overload:Biocs.DnaBase.ToUpper
  isSpec: "True"
  fullName: Biocs.DnaBase.ToUpper
  nameWithType: DnaBase.ToUpper
- uid: Biocs.DnaBase.TryParse(System.Char,Biocs.DnaBase@)
  name: TryParse(char, out DnaBase)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_TryParse_System_Char_Biocs_DnaBase__
  commentId: M:Biocs.DnaBase.TryParse(System.Char,Biocs.DnaBase@)
  name.vb: TryParse(Char, DnaBase)
  fullName: Biocs.DnaBase.TryParse(char, out Biocs.DnaBase)
  fullName.vb: Biocs.DnaBase.TryParse(Char, Biocs.DnaBase)
  nameWithType: DnaBase.TryParse(char, out DnaBase)
  nameWithType.vb: DnaBase.TryParse(Char, DnaBase)
- uid: Biocs.DnaBase.TryParse*
  name: TryParse
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_TryParse_
  commentId: Overload:Biocs.DnaBase.TryParse
  isSpec: "True"
  fullName: Biocs.DnaBase.TryParse
  nameWithType: DnaBase.TryParse
- uid: Biocs.DnaBase.op_Equality(Biocs.DnaBase,Biocs.DnaBase)
  name: operator ==(DnaBase, DnaBase)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_op_Equality_Biocs_DnaBase_Biocs_DnaBase_
  commentId: M:Biocs.DnaBase.op_Equality(Biocs.DnaBase,Biocs.DnaBase)
  name.vb: =(DnaBase, DnaBase)
  fullName: Biocs.DnaBase.operator ==(Biocs.DnaBase, Biocs.DnaBase)
  fullName.vb: Biocs.DnaBase.=(Biocs.DnaBase, Biocs.DnaBase)
  nameWithType: DnaBase.operator ==(DnaBase, DnaBase)
  nameWithType.vb: DnaBase.=(DnaBase, DnaBase)
- uid: Biocs.DnaBase.op_Equality*
  name: operator ==
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_op_Equality_
  commentId: Overload:Biocs.DnaBase.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Biocs.DnaBase.operator ==
  fullName.vb: Biocs.DnaBase.=
  nameWithType: DnaBase.operator ==
  nameWithType.vb: DnaBase.=
- uid: Biocs.DnaBase.op_Inequality(Biocs.DnaBase,Biocs.DnaBase)
  name: operator !=(DnaBase, DnaBase)
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_op_Inequality_Biocs_DnaBase_Biocs_DnaBase_
  commentId: M:Biocs.DnaBase.op_Inequality(Biocs.DnaBase,Biocs.DnaBase)
  name.vb: <>(DnaBase, DnaBase)
  fullName: Biocs.DnaBase.operator !=(Biocs.DnaBase, Biocs.DnaBase)
  fullName.vb: Biocs.DnaBase.<>(Biocs.DnaBase, Biocs.DnaBase)
  nameWithType: DnaBase.operator !=(DnaBase, DnaBase)
  nameWithType.vb: DnaBase.<>(DnaBase, DnaBase)
- uid: Biocs.DnaBase.op_Inequality*
  name: operator !=
  href: api/Biocs.DnaBase.html#Biocs_DnaBase_op_Inequality_
  commentId: Overload:Biocs.DnaBase.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Biocs.DnaBase.operator !=
  fullName.vb: Biocs.DnaBase.<>
  nameWithType: DnaBase.operator !=
  nameWithType.vb: DnaBase.<>
- uid: Biocs.IO
  name: Biocs.IO
  href: api/Biocs.IO.html
  commentId: N:Biocs.IO
  fullName: Biocs.IO
  nameWithType: Biocs.IO
- uid: Biocs.IO.BgzfStream
  name: BgzfStream
  href: api/Biocs.IO.BgzfStream.html
  commentId: T:Biocs.IO.BgzfStream
  fullName: Biocs.IO.BgzfStream
  nameWithType: BgzfStream
- uid: Biocs.IO.BgzfStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  name: BgzfStream(Stream, CompressionLevel, bool)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream__ctor_System_IO_Stream_System_IO_Compression_CompressionLevel_System_Boolean_
  commentId: M:Biocs.IO.BgzfStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  name.vb: New(Stream, CompressionLevel, Boolean)
  fullName: Biocs.IO.BgzfStream.BgzfStream(System.IO.Stream, System.IO.Compression.CompressionLevel, bool)
  fullName.vb: Biocs.IO.BgzfStream.New(System.IO.Stream, System.IO.Compression.CompressionLevel, Boolean)
  nameWithType: BgzfStream.BgzfStream(Stream, CompressionLevel, bool)
  nameWithType.vb: BgzfStream.New(Stream, CompressionLevel, Boolean)
- uid: Biocs.IO.BgzfStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  name: BgzfStream(Stream, CompressionMode, bool)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_System_Boolean_
  commentId: M:Biocs.IO.BgzfStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  name.vb: New(Stream, CompressionMode, Boolean)
  fullName: Biocs.IO.BgzfStream.BgzfStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)
  fullName.vb: Biocs.IO.BgzfStream.New(System.IO.Stream, System.IO.Compression.CompressionMode, Boolean)
  nameWithType: BgzfStream.BgzfStream(Stream, CompressionMode, bool)
  nameWithType.vb: BgzfStream.New(Stream, CompressionMode, Boolean)
- uid: Biocs.IO.BgzfStream.#ctor*
  name: BgzfStream
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream__ctor_
  commentId: Overload:Biocs.IO.BgzfStream.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.IO.BgzfStream.BgzfStream
  fullName.vb: Biocs.IO.BgzfStream.New
  nameWithType: BgzfStream.BgzfStream
  nameWithType.vb: BgzfStream.New
- uid: Biocs.IO.BgzfStream.CanRead
  name: CanRead
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanRead
  commentId: P:Biocs.IO.BgzfStream.CanRead
  fullName: Biocs.IO.BgzfStream.CanRead
  nameWithType: BgzfStream.CanRead
- uid: Biocs.IO.BgzfStream.CanRead*
  name: CanRead
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanRead_
  commentId: Overload:Biocs.IO.BgzfStream.CanRead
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.CanRead
  nameWithType: BgzfStream.CanRead
- uid: Biocs.IO.BgzfStream.CanSeek
  name: CanSeek
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanSeek
  commentId: P:Biocs.IO.BgzfStream.CanSeek
  fullName: Biocs.IO.BgzfStream.CanSeek
  nameWithType: BgzfStream.CanSeek
- uid: Biocs.IO.BgzfStream.CanSeek*
  name: CanSeek
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanSeek_
  commentId: Overload:Biocs.IO.BgzfStream.CanSeek
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.CanSeek
  nameWithType: BgzfStream.CanSeek
- uid: Biocs.IO.BgzfStream.CanWrite
  name: CanWrite
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanWrite
  commentId: P:Biocs.IO.BgzfStream.CanWrite
  fullName: Biocs.IO.BgzfStream.CanWrite
  nameWithType: BgzfStream.CanWrite
- uid: Biocs.IO.BgzfStream.CanWrite*
  name: CanWrite
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_CanWrite_
  commentId: Overload:Biocs.IO.BgzfStream.CanWrite
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.CanWrite
  nameWithType: BgzfStream.CanWrite
- uid: Biocs.IO.BgzfStream.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Dispose_System_Boolean_
  commentId: M:Biocs.IO.BgzfStream.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Biocs.IO.BgzfStream.Dispose(bool)
  fullName.vb: Biocs.IO.BgzfStream.Dispose(Boolean)
  nameWithType: BgzfStream.Dispose(bool)
  nameWithType.vb: BgzfStream.Dispose(Boolean)
- uid: Biocs.IO.BgzfStream.Dispose*
  name: Dispose
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Dispose_
  commentId: Overload:Biocs.IO.BgzfStream.Dispose
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Dispose
  nameWithType: BgzfStream.Dispose
- uid: Biocs.IO.BgzfStream.Flush
  name: Flush()
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Flush
  commentId: M:Biocs.IO.BgzfStream.Flush
  fullName: Biocs.IO.BgzfStream.Flush()
  nameWithType: BgzfStream.Flush()
- uid: Biocs.IO.BgzfStream.Flush*
  name: Flush
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Flush_
  commentId: Overload:Biocs.IO.BgzfStream.Flush
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Flush
  nameWithType: BgzfStream.Flush
- uid: Biocs.IO.BgzfStream.IsBgzfFile(System.String)
  name: IsBgzfFile(string?)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_IsBgzfFile_System_String_
  commentId: M:Biocs.IO.BgzfStream.IsBgzfFile(System.String)
  name.vb: IsBgzfFile(String)
  fullName: Biocs.IO.BgzfStream.IsBgzfFile(string?)
  fullName.vb: Biocs.IO.BgzfStream.IsBgzfFile(String)
  nameWithType: BgzfStream.IsBgzfFile(string?)
  nameWithType.vb: BgzfStream.IsBgzfFile(String)
- uid: Biocs.IO.BgzfStream.IsBgzfFile*
  name: IsBgzfFile
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_IsBgzfFile_
  commentId: Overload:Biocs.IO.BgzfStream.IsBgzfFile
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.IsBgzfFile
  nameWithType: BgzfStream.IsBgzfFile
- uid: Biocs.IO.BgzfStream.Length
  name: Length
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Length
  commentId: P:Biocs.IO.BgzfStream.Length
  fullName: Biocs.IO.BgzfStream.Length
  nameWithType: BgzfStream.Length
- uid: Biocs.IO.BgzfStream.Length*
  name: Length
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Length_
  commentId: Overload:Biocs.IO.BgzfStream.Length
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Length
  nameWithType: BgzfStream.Length
- uid: Biocs.IO.BgzfStream.Position
  name: Position
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Position
  commentId: P:Biocs.IO.BgzfStream.Position
  fullName: Biocs.IO.BgzfStream.Position
  nameWithType: BgzfStream.Position
- uid: Biocs.IO.BgzfStream.Position*
  name: Position
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Position_
  commentId: Overload:Biocs.IO.BgzfStream.Position
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Position
  nameWithType: BgzfStream.Position
- uid: Biocs.IO.BgzfStream.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(byte[], int, int)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:Biocs.IO.BgzfStream.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Integer, Integer)
  fullName: Biocs.IO.BgzfStream.Read(byte[], int, int)
  fullName.vb: Biocs.IO.BgzfStream.Read(Byte(), Integer, Integer)
  nameWithType: BgzfStream.Read(byte[], int, int)
  nameWithType.vb: BgzfStream.Read(Byte(), Integer, Integer)
- uid: Biocs.IO.BgzfStream.Read(System.Span{System.Byte})
  name: Read(Span<byte>)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Read_System_Span_System_Byte__
  commentId: M:Biocs.IO.BgzfStream.Read(System.Span{System.Byte})
  name.vb: Read(Span(Of Byte))
  fullName: Biocs.IO.BgzfStream.Read(System.Span<byte>)
  fullName.vb: Biocs.IO.BgzfStream.Read(System.Span(Of Byte))
  nameWithType: BgzfStream.Read(Span<byte>)
  nameWithType.vb: BgzfStream.Read(Span(Of Byte))
- uid: Biocs.IO.BgzfStream.Read*
  name: Read
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Read_
  commentId: Overload:Biocs.IO.BgzfStream.Read
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Read
  nameWithType: BgzfStream.Read
- uid: Biocs.IO.BgzfStream.Seek(System.Int64,System.IO.SeekOrigin)
  name: Seek(long, SeekOrigin)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Seek_System_Int64_System_IO_SeekOrigin_
  commentId: M:Biocs.IO.BgzfStream.Seek(System.Int64,System.IO.SeekOrigin)
  name.vb: Seek(Long, SeekOrigin)
  fullName: Biocs.IO.BgzfStream.Seek(long, System.IO.SeekOrigin)
  fullName.vb: Biocs.IO.BgzfStream.Seek(Long, System.IO.SeekOrigin)
  nameWithType: BgzfStream.Seek(long, SeekOrigin)
  nameWithType.vb: BgzfStream.Seek(Long, SeekOrigin)
- uid: Biocs.IO.BgzfStream.Seek*
  name: Seek
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Seek_
  commentId: Overload:Biocs.IO.BgzfStream.Seek
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Seek
  nameWithType: BgzfStream.Seek
- uid: Biocs.IO.BgzfStream.SetLength(System.Int64)
  name: SetLength(long)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_SetLength_System_Int64_
  commentId: M:Biocs.IO.BgzfStream.SetLength(System.Int64)
  name.vb: SetLength(Long)
  fullName: Biocs.IO.BgzfStream.SetLength(long)
  fullName.vb: Biocs.IO.BgzfStream.SetLength(Long)
  nameWithType: BgzfStream.SetLength(long)
  nameWithType.vb: BgzfStream.SetLength(Long)
- uid: Biocs.IO.BgzfStream.SetLength*
  name: SetLength
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_SetLength_
  commentId: Overload:Biocs.IO.BgzfStream.SetLength
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.SetLength
  nameWithType: BgzfStream.SetLength
- uid: Biocs.IO.BgzfStream.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(byte[], int, int)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:Biocs.IO.BgzfStream.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Integer, Integer)
  fullName: Biocs.IO.BgzfStream.Write(byte[], int, int)
  fullName.vb: Biocs.IO.BgzfStream.Write(Byte(), Integer, Integer)
  nameWithType: BgzfStream.Write(byte[], int, int)
  nameWithType.vb: BgzfStream.Write(Byte(), Integer, Integer)
- uid: Biocs.IO.BgzfStream.Write(System.ReadOnlySpan{System.Byte})
  name: Write(ReadOnlySpan<byte>)
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Write_System_ReadOnlySpan_System_Byte__
  commentId: M:Biocs.IO.BgzfStream.Write(System.ReadOnlySpan{System.Byte})
  name.vb: Write(ReadOnlySpan(Of Byte))
  fullName: Biocs.IO.BgzfStream.Write(System.ReadOnlySpan<byte>)
  fullName.vb: Biocs.IO.BgzfStream.Write(System.ReadOnlySpan(Of Byte))
  nameWithType: BgzfStream.Write(ReadOnlySpan<byte>)
  nameWithType.vb: BgzfStream.Write(ReadOnlySpan(Of Byte))
- uid: Biocs.IO.BgzfStream.Write*
  name: Write
  href: api/Biocs.IO.BgzfStream.html#Biocs_IO_BgzfStream_Write_
  commentId: Overload:Biocs.IO.BgzfStream.Write
  isSpec: "True"
  fullName: Biocs.IO.BgzfStream.Write
  nameWithType: BgzfStream.Write
- uid: Biocs.Location
  name: Location
  href: api/Biocs.Location.html
  commentId: T:Biocs.Location
  fullName: Biocs.Location
  nameWithType: Location
- uid: Biocs.Location.CompareTo(Biocs.Location)
  name: CompareTo(Location?)
  href: api/Biocs.Location.html#Biocs_Location_CompareTo_Biocs_Location_
  commentId: M:Biocs.Location.CompareTo(Biocs.Location)
  name.vb: CompareTo(Location)
  fullName: Biocs.Location.CompareTo(Biocs.Location?)
  fullName.vb: Biocs.Location.CompareTo(Biocs.Location)
  nameWithType: Location.CompareTo(Location?)
  nameWithType.vb: Location.CompareTo(Location)
- uid: Biocs.Location.CompareTo*
  name: CompareTo
  href: api/Biocs.Location.html#Biocs_Location_CompareTo_
  commentId: Overload:Biocs.Location.CompareTo
  isSpec: "True"
  fullName: Biocs.Location.CompareTo
  nameWithType: Location.CompareTo
- uid: Biocs.Location.Elements
  name: Elements
  href: api/Biocs.Location.html#Biocs_Location_Elements
  commentId: P:Biocs.Location.Elements
  fullName: Biocs.Location.Elements
  nameWithType: Location.Elements
- uid: Biocs.Location.Elements*
  name: Elements
  href: api/Biocs.Location.html#Biocs_Location_Elements_
  commentId: Overload:Biocs.Location.Elements
  isSpec: "True"
  fullName: Biocs.Location.Elements
  nameWithType: Location.Elements
- uid: Biocs.Location.End
  name: End
  href: api/Biocs.Location.html#Biocs_Location_End
  commentId: P:Biocs.Location.End
  fullName: Biocs.Location.End
  nameWithType: Location.End
- uid: Biocs.Location.End*
  name: End
  href: api/Biocs.Location.html#Biocs_Location_End_
  commentId: Overload:Biocs.Location.End
  isSpec: "True"
  fullName: Biocs.Location.End
  nameWithType: Location.End
- uid: Biocs.Location.Equals(Biocs.Location)
  name: Equals(Location?)
  href: api/Biocs.Location.html#Biocs_Location_Equals_Biocs_Location_
  commentId: M:Biocs.Location.Equals(Biocs.Location)
  name.vb: Equals(Location)
  fullName: Biocs.Location.Equals(Biocs.Location?)
  fullName.vb: Biocs.Location.Equals(Biocs.Location)
  nameWithType: Location.Equals(Location?)
  nameWithType.vb: Location.Equals(Location)
- uid: Biocs.Location.Equals(System.Object)
  name: Equals(object?)
  href: api/Biocs.Location.html#Biocs_Location_Equals_System_Object_
  commentId: M:Biocs.Location.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Biocs.Location.Equals(object?)
  fullName.vb: Biocs.Location.Equals(Object)
  nameWithType: Location.Equals(object?)
  nameWithType.vb: Location.Equals(Object)
- uid: Biocs.Location.Equals*
  name: Equals
  href: api/Biocs.Location.html#Biocs_Location_Equals_
  commentId: Overload:Biocs.Location.Equals
  isSpec: "True"
  fullName: Biocs.Location.Equals
  nameWithType: Location.Equals
- uid: Biocs.Location.GetHashCode
  name: GetHashCode()
  href: api/Biocs.Location.html#Biocs_Location_GetHashCode
  commentId: M:Biocs.Location.GetHashCode
  fullName: Biocs.Location.GetHashCode()
  nameWithType: Location.GetHashCode()
- uid: Biocs.Location.GetHashCode*
  name: GetHashCode
  href: api/Biocs.Location.html#Biocs_Location_GetHashCode_
  commentId: Overload:Biocs.Location.GetHashCode
  isSpec: "True"
  fullName: Biocs.Location.GetHashCode
  nameWithType: Location.GetHashCode
- uid: Biocs.Location.IsComplement
  name: IsComplement
  href: api/Biocs.Location.html#Biocs_Location_IsComplement
  commentId: P:Biocs.Location.IsComplement
  fullName: Biocs.Location.IsComplement
  nameWithType: Location.IsComplement
- uid: Biocs.Location.IsComplement*
  name: IsComplement
  href: api/Biocs.Location.html#Biocs_Location_IsComplement_
  commentId: Overload:Biocs.Location.IsComplement
  isSpec: "True"
  fullName: Biocs.Location.IsComplement
  nameWithType: Location.IsComplement
- uid: Biocs.Location.IsExactEnd
  name: IsExactEnd
  href: api/Biocs.Location.html#Biocs_Location_IsExactEnd
  commentId: P:Biocs.Location.IsExactEnd
  fullName: Biocs.Location.IsExactEnd
  nameWithType: Location.IsExactEnd
- uid: Biocs.Location.IsExactEnd*
  name: IsExactEnd
  href: api/Biocs.Location.html#Biocs_Location_IsExactEnd_
  commentId: Overload:Biocs.Location.IsExactEnd
  isSpec: "True"
  fullName: Biocs.Location.IsExactEnd
  nameWithType: Location.IsExactEnd
- uid: Biocs.Location.IsExactStart
  name: IsExactStart
  href: api/Biocs.Location.html#Biocs_Location_IsExactStart
  commentId: P:Biocs.Location.IsExactStart
  fullName: Biocs.Location.IsExactStart
  nameWithType: Location.IsExactStart
- uid: Biocs.Location.IsExactStart*
  name: IsExactStart
  href: api/Biocs.Location.html#Biocs_Location_IsExactStart_
  commentId: Overload:Biocs.Location.IsExactStart
  isSpec: "True"
  fullName: Biocs.Location.IsExactStart
  nameWithType: Location.IsExactStart
- uid: Biocs.Location.IsSpan
  name: IsSpan
  href: api/Biocs.Location.html#Biocs_Location_IsSpan
  commentId: P:Biocs.Location.IsSpan
  fullName: Biocs.Location.IsSpan
  nameWithType: Location.IsSpan
- uid: Biocs.Location.IsSpan*
  name: IsSpan
  href: api/Biocs.Location.html#Biocs_Location_IsSpan_
  commentId: Overload:Biocs.Location.IsSpan
  isSpec: "True"
  fullName: Biocs.Location.IsSpan
  nameWithType: Location.IsSpan
- uid: Biocs.Location.Length
  name: Length
  href: api/Biocs.Location.html#Biocs_Location_Length
  commentId: P:Biocs.Location.Length
  fullName: Biocs.Location.Length
  nameWithType: Location.Length
- uid: Biocs.Location.Length*
  name: Length
  href: api/Biocs.Location.html#Biocs_Location_Length_
  commentId: Overload:Biocs.Location.Length
  isSpec: "True"
  fullName: Biocs.Location.Length
  nameWithType: Location.Length
- uid: Biocs.Location.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)
  name: Parse(ReadOnlySpan<char>, IFormatProvider?)
  href: api/Biocs.Location.html#Biocs_Location_Parse_System_ReadOnlySpan_System_Char__System_IFormatProvider_
  commentId: M:Biocs.Location.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)
  name.vb: Parse(ReadOnlySpan(Of Char), IFormatProvider)
  fullName: Biocs.Location.Parse(System.ReadOnlySpan<char>, System.IFormatProvider?)
  fullName.vb: Biocs.Location.Parse(System.ReadOnlySpan(Of Char), System.IFormatProvider)
  nameWithType: Location.Parse(ReadOnlySpan<char>, IFormatProvider?)
  nameWithType.vb: Location.Parse(ReadOnlySpan(Of Char), IFormatProvider)
- uid: Biocs.Location.Parse(System.String,System.IFormatProvider)
  name: Parse(string, IFormatProvider?)
  href: api/Biocs.Location.html#Biocs_Location_Parse_System_String_System_IFormatProvider_
  commentId: M:Biocs.Location.Parse(System.String,System.IFormatProvider)
  name.vb: Parse(String, IFormatProvider)
  fullName: Biocs.Location.Parse(string, System.IFormatProvider?)
  fullName.vb: Biocs.Location.Parse(String, System.IFormatProvider)
  nameWithType: Location.Parse(string, IFormatProvider?)
  nameWithType.vb: Location.Parse(String, IFormatProvider)
- uid: Biocs.Location.Parse*
  name: Parse
  href: api/Biocs.Location.html#Biocs_Location_Parse_
  commentId: Overload:Biocs.Location.Parse
  isSpec: "True"
  fullName: Biocs.Location.Parse
  nameWithType: Location.Parse
- uid: Biocs.Location.SequenceID
  name: SequenceID
  href: api/Biocs.Location.html#Biocs_Location_SequenceID
  commentId: P:Biocs.Location.SequenceID
  fullName: Biocs.Location.SequenceID
  nameWithType: Location.SequenceID
- uid: Biocs.Location.SequenceID*
  name: SequenceID
  href: api/Biocs.Location.html#Biocs_Location_SequenceID_
  commentId: Overload:Biocs.Location.SequenceID
  isSpec: "True"
  fullName: Biocs.Location.SequenceID
  nameWithType: Location.SequenceID
- uid: Biocs.Location.Start
  name: Start
  href: api/Biocs.Location.html#Biocs_Location_Start
  commentId: P:Biocs.Location.Start
  fullName: Biocs.Location.Start
  nameWithType: Location.Start
- uid: Biocs.Location.Start*
  name: Start
  href: api/Biocs.Location.html#Biocs_Location_Start_
  commentId: Overload:Biocs.Location.Start
  isSpec: "True"
  fullName: Biocs.Location.Start
  nameWithType: Location.Start
- uid: Biocs.Location.ToString
  name: ToString()
  href: api/Biocs.Location.html#Biocs_Location_ToString
  commentId: M:Biocs.Location.ToString
  fullName: Biocs.Location.ToString()
  nameWithType: Location.ToString()
- uid: Biocs.Location.ToString*
  name: ToString
  href: api/Biocs.Location.html#Biocs_Location_ToString_
  commentId: Overload:Biocs.Location.ToString
  isSpec: "True"
  fullName: Biocs.Location.ToString
  nameWithType: Location.ToString
- uid: Biocs.Location.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,Biocs.Location@)
  name: TryParse(ReadOnlySpan<char>, IFormatProvider?, out Location)
  href: api/Biocs.Location.html#Biocs_Location_TryParse_System_ReadOnlySpan_System_Char__System_IFormatProvider_Biocs_Location__
  commentId: M:Biocs.Location.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,Biocs.Location@)
  name.vb: TryParse(ReadOnlySpan(Of Char), IFormatProvider, Location)
  fullName: Biocs.Location.TryParse(System.ReadOnlySpan<char>, System.IFormatProvider?, out Biocs.Location)
  fullName.vb: Biocs.Location.TryParse(System.ReadOnlySpan(Of Char), System.IFormatProvider, Biocs.Location)
  nameWithType: Location.TryParse(ReadOnlySpan<char>, IFormatProvider?, out Location)
  nameWithType.vb: Location.TryParse(ReadOnlySpan(Of Char), IFormatProvider, Location)
- uid: Biocs.Location.TryParse(System.String,System.IFormatProvider,Biocs.Location@)
  name: TryParse(string?, IFormatProvider?, out Location)
  href: api/Biocs.Location.html#Biocs_Location_TryParse_System_String_System_IFormatProvider_Biocs_Location__
  commentId: M:Biocs.Location.TryParse(System.String,System.IFormatProvider,Biocs.Location@)
  name.vb: TryParse(String, IFormatProvider, Location)
  fullName: Biocs.Location.TryParse(string?, System.IFormatProvider?, out Biocs.Location)
  fullName.vb: Biocs.Location.TryParse(String, System.IFormatProvider, Biocs.Location)
  nameWithType: Location.TryParse(string?, IFormatProvider?, out Location)
  nameWithType.vb: Location.TryParse(String, IFormatProvider, Location)
- uid: Biocs.Location.TryParse*
  name: TryParse
  href: api/Biocs.Location.html#Biocs_Location_TryParse_
  commentId: Overload:Biocs.Location.TryParse
  isSpec: "True"
  fullName: Biocs.Location.TryParse
  nameWithType: Location.TryParse
- uid: Biocs.Location.op_Equality(Biocs.Location,Biocs.Location)
  name: operator ==(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_Equality_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_Equality(Biocs.Location,Biocs.Location)
  name.vb: =(Location, Location)
  fullName: Biocs.Location.operator ==(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.=(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator ==(Location?, Location?)
  nameWithType.vb: Location.=(Location, Location)
- uid: Biocs.Location.op_Equality*
  name: operator ==
  href: api/Biocs.Location.html#Biocs_Location_op_Equality_
  commentId: Overload:Biocs.Location.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Biocs.Location.operator ==
  fullName.vb: Biocs.Location.=
  nameWithType: Location.operator ==
  nameWithType.vb: Location.=
- uid: Biocs.Location.op_GreaterThan(Biocs.Location,Biocs.Location)
  name: operator >(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_GreaterThan_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_GreaterThan(Biocs.Location,Biocs.Location)
  name.vb: '>(Location, Location)'
  fullName: Biocs.Location.operator >(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.>(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator >(Location?, Location?)
  nameWithType.vb: Location.>(Location, Location)
- uid: Biocs.Location.op_GreaterThan*
  name: operator >
  href: api/Biocs.Location.html#Biocs_Location_op_GreaterThan_
  commentId: Overload:Biocs.Location.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Biocs.Location.operator >
  fullName.vb: Biocs.Location.>
  nameWithType: Location.operator >
  nameWithType.vb: Location.>
- uid: Biocs.Location.op_GreaterThanOrEqual(Biocs.Location,Biocs.Location)
  name: operator >=(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_GreaterThanOrEqual_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_GreaterThanOrEqual(Biocs.Location,Biocs.Location)
  name.vb: '>=(Location, Location)'
  fullName: Biocs.Location.operator >=(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.>=(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator >=(Location?, Location?)
  nameWithType.vb: Location.>=(Location, Location)
- uid: Biocs.Location.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Biocs.Location.html#Biocs_Location_op_GreaterThanOrEqual_
  commentId: Overload:Biocs.Location.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Biocs.Location.operator >=
  fullName.vb: Biocs.Location.>=
  nameWithType: Location.operator >=
  nameWithType.vb: Location.>=
- uid: Biocs.Location.op_Inequality(Biocs.Location,Biocs.Location)
  name: operator !=(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_Inequality_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_Inequality(Biocs.Location,Biocs.Location)
  name.vb: <>(Location, Location)
  fullName: Biocs.Location.operator !=(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.<>(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator !=(Location?, Location?)
  nameWithType.vb: Location.<>(Location, Location)
- uid: Biocs.Location.op_Inequality*
  name: operator !=
  href: api/Biocs.Location.html#Biocs_Location_op_Inequality_
  commentId: Overload:Biocs.Location.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Biocs.Location.operator !=
  fullName.vb: Biocs.Location.<>
  nameWithType: Location.operator !=
  nameWithType.vb: Location.<>
- uid: Biocs.Location.op_LessThan(Biocs.Location,Biocs.Location)
  name: operator <(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_LessThan_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_LessThan(Biocs.Location,Biocs.Location)
  name.vb: <(Location, Location)
  fullName: Biocs.Location.operator <(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.<(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator <(Location?, Location?)
  nameWithType.vb: Location.<(Location, Location)
- uid: Biocs.Location.op_LessThan*
  name: operator <
  href: api/Biocs.Location.html#Biocs_Location_op_LessThan_
  commentId: Overload:Biocs.Location.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Biocs.Location.operator <
  fullName.vb: Biocs.Location.<
  nameWithType: Location.operator <
  nameWithType.vb: Location.<
- uid: Biocs.Location.op_LessThanOrEqual(Biocs.Location,Biocs.Location)
  name: operator <=(Location?, Location?)
  href: api/Biocs.Location.html#Biocs_Location_op_LessThanOrEqual_Biocs_Location_Biocs_Location_
  commentId: M:Biocs.Location.op_LessThanOrEqual(Biocs.Location,Biocs.Location)
  name.vb: <=(Location, Location)
  fullName: Biocs.Location.operator <=(Biocs.Location?, Biocs.Location?)
  fullName.vb: Biocs.Location.<=(Biocs.Location, Biocs.Location)
  nameWithType: Location.operator <=(Location?, Location?)
  nameWithType.vb: Location.<=(Location, Location)
- uid: Biocs.Location.op_LessThanOrEqual*
  name: operator <=
  href: api/Biocs.Location.html#Biocs_Location_op_LessThanOrEqual_
  commentId: Overload:Biocs.Location.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Biocs.Location.operator <=
  fullName.vb: Biocs.Location.<=
  nameWithType: Location.operator <=
  nameWithType.vb: Location.<=
- uid: Biocs.Numerics
  name: Biocs.Numerics
  href: api/Biocs.Numerics.html
  commentId: N:Biocs.Numerics
  fullName: Biocs.Numerics
  nameWithType: Biocs.Numerics
- uid: Biocs.Numerics.DoubleMersenneTwister
  name: DoubleMersenneTwister
  href: api/Biocs.Numerics.DoubleMersenneTwister.html
  commentId: T:Biocs.Numerics.DoubleMersenneTwister
  fullName: Biocs.Numerics.DoubleMersenneTwister
  nameWithType: DoubleMersenneTwister
- uid: Biocs.Numerics.DoubleMersenneTwister.#ctor
  name: DoubleMersenneTwister()
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister__ctor
  commentId: M:Biocs.Numerics.DoubleMersenneTwister.#ctor
  name.vb: New()
  fullName: Biocs.Numerics.DoubleMersenneTwister.DoubleMersenneTwister()
  fullName.vb: Biocs.Numerics.DoubleMersenneTwister.New()
  nameWithType: DoubleMersenneTwister.DoubleMersenneTwister()
  nameWithType.vb: DoubleMersenneTwister.New()
- uid: Biocs.Numerics.DoubleMersenneTwister.#ctor(System.Int32)
  name: DoubleMersenneTwister(int)
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister__ctor_System_Int32_
  commentId: M:Biocs.Numerics.DoubleMersenneTwister.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: Biocs.Numerics.DoubleMersenneTwister.DoubleMersenneTwister(int)
  fullName.vb: Biocs.Numerics.DoubleMersenneTwister.New(Integer)
  nameWithType: DoubleMersenneTwister.DoubleMersenneTwister(int)
  nameWithType.vb: DoubleMersenneTwister.New(Integer)
- uid: Biocs.Numerics.DoubleMersenneTwister.#ctor(System.Int32[])
  name: DoubleMersenneTwister(int[])
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister__ctor_System_Int32___
  commentId: M:Biocs.Numerics.DoubleMersenneTwister.#ctor(System.Int32[])
  name.vb: New(Integer())
  fullName: Biocs.Numerics.DoubleMersenneTwister.DoubleMersenneTwister(int[])
  fullName.vb: Biocs.Numerics.DoubleMersenneTwister.New(Integer())
  nameWithType: DoubleMersenneTwister.DoubleMersenneTwister(int[])
  nameWithType.vb: DoubleMersenneTwister.New(Integer())
- uid: Biocs.Numerics.DoubleMersenneTwister.#ctor*
  name: DoubleMersenneTwister
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister__ctor_
  commentId: Overload:Biocs.Numerics.DoubleMersenneTwister.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.Numerics.DoubleMersenneTwister.DoubleMersenneTwister
  fullName.vb: Biocs.Numerics.DoubleMersenneTwister.New
  nameWithType: DoubleMersenneTwister.DoubleMersenneTwister
  nameWithType.vb: DoubleMersenneTwister.New
- uid: Biocs.Numerics.DoubleMersenneTwister.Next
  name: Next()
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister_Next
  commentId: M:Biocs.Numerics.DoubleMersenneTwister.Next
  fullName: Biocs.Numerics.DoubleMersenneTwister.Next()
  nameWithType: DoubleMersenneTwister.Next()
- uid: Biocs.Numerics.DoubleMersenneTwister.Next*
  name: Next
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister_Next_
  commentId: Overload:Biocs.Numerics.DoubleMersenneTwister.Next
  isSpec: "True"
  fullName: Biocs.Numerics.DoubleMersenneTwister.Next
  nameWithType: DoubleMersenneTwister.Next
- uid: Biocs.Numerics.DoubleMersenneTwister.NextOpen
  name: NextOpen()
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister_NextOpen
  commentId: M:Biocs.Numerics.DoubleMersenneTwister.NextOpen
  fullName: Biocs.Numerics.DoubleMersenneTwister.NextOpen()
  nameWithType: DoubleMersenneTwister.NextOpen()
- uid: Biocs.Numerics.DoubleMersenneTwister.NextOpen*
  name: NextOpen
  href: api/Biocs.Numerics.DoubleMersenneTwister.html#Biocs_Numerics_DoubleMersenneTwister_NextOpen_
  commentId: Overload:Biocs.Numerics.DoubleMersenneTwister.NextOpen
  isSpec: "True"
  fullName: Biocs.Numerics.DoubleMersenneTwister.NextOpen
  nameWithType: DoubleMersenneTwister.NextOpen
- uid: Biocs.SequenceRange
  name: SequenceRange
  href: api/Biocs.SequenceRange.html
  commentId: T:Biocs.SequenceRange
  fullName: Biocs.SequenceRange
  nameWithType: SequenceRange
- uid: Biocs.SequenceRange.#ctor(System.Int32,System.Int32)
  name: SequenceRange(int, int)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange__ctor_System_Int32_System_Int32_
  commentId: M:Biocs.SequenceRange.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: Biocs.SequenceRange.SequenceRange(int, int)
  fullName.vb: Biocs.SequenceRange.New(Integer, Integer)
  nameWithType: SequenceRange.SequenceRange(int, int)
  nameWithType.vb: SequenceRange.New(Integer, Integer)
- uid: Biocs.SequenceRange.#ctor*
  name: SequenceRange
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange__ctor_
  commentId: Overload:Biocs.SequenceRange.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.SequenceRange.SequenceRange
  fullName.vb: Biocs.SequenceRange.New
  nameWithType: SequenceRange.SequenceRange
  nameWithType.vb: SequenceRange.New
- uid: Biocs.SequenceRange.CompareTo(Biocs.SequenceRange)
  name: CompareTo(SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_CompareTo_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.CompareTo(Biocs.SequenceRange)
  fullName: Biocs.SequenceRange.CompareTo(Biocs.SequenceRange)
  nameWithType: SequenceRange.CompareTo(SequenceRange)
- uid: Biocs.SequenceRange.CompareTo*
  name: CompareTo
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_CompareTo_
  commentId: Overload:Biocs.SequenceRange.CompareTo
  isSpec: "True"
  fullName: Biocs.SequenceRange.CompareTo
  nameWithType: SequenceRange.CompareTo
- uid: Biocs.SequenceRange.End
  name: End
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_End
  commentId: P:Biocs.SequenceRange.End
  fullName: Biocs.SequenceRange.End
  nameWithType: SequenceRange.End
- uid: Biocs.SequenceRange.End*
  name: End
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_End_
  commentId: Overload:Biocs.SequenceRange.End
  isSpec: "True"
  fullName: Biocs.SequenceRange.End
  nameWithType: SequenceRange.End
- uid: Biocs.SequenceRange.Equals(Biocs.SequenceRange)
  name: Equals(SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Equals_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.Equals(Biocs.SequenceRange)
  fullName: Biocs.SequenceRange.Equals(Biocs.SequenceRange)
  nameWithType: SequenceRange.Equals(SequenceRange)
- uid: Biocs.SequenceRange.Equals(System.Object)
  name: Equals(object?)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Equals_System_Object_
  commentId: M:Biocs.SequenceRange.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Biocs.SequenceRange.Equals(object?)
  fullName.vb: Biocs.SequenceRange.Equals(Object)
  nameWithType: SequenceRange.Equals(object?)
  nameWithType.vb: SequenceRange.Equals(Object)
- uid: Biocs.SequenceRange.Equals*
  name: Equals
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Equals_
  commentId: Overload:Biocs.SequenceRange.Equals
  isSpec: "True"
  fullName: Biocs.SequenceRange.Equals
  nameWithType: SequenceRange.Equals
- uid: Biocs.SequenceRange.GetHashCode
  name: GetHashCode()
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_GetHashCode
  commentId: M:Biocs.SequenceRange.GetHashCode
  fullName: Biocs.SequenceRange.GetHashCode()
  nameWithType: SequenceRange.GetHashCode()
- uid: Biocs.SequenceRange.GetHashCode*
  name: GetHashCode
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_GetHashCode_
  commentId: Overload:Biocs.SequenceRange.GetHashCode
  isSpec: "True"
  fullName: Biocs.SequenceRange.GetHashCode
  nameWithType: SequenceRange.GetHashCode
- uid: Biocs.SequenceRange.Length
  name: Length
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Length
  commentId: P:Biocs.SequenceRange.Length
  fullName: Biocs.SequenceRange.Length
  nameWithType: SequenceRange.Length
- uid: Biocs.SequenceRange.Length*
  name: Length
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Length_
  commentId: Overload:Biocs.SequenceRange.Length
  isSpec: "True"
  fullName: Biocs.SequenceRange.Length
  nameWithType: SequenceRange.Length
- uid: Biocs.SequenceRange.Start
  name: Start
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Start
  commentId: P:Biocs.SequenceRange.Start
  fullName: Biocs.SequenceRange.Start
  nameWithType: SequenceRange.Start
- uid: Biocs.SequenceRange.Start*
  name: Start
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_Start_
  commentId: Overload:Biocs.SequenceRange.Start
  isSpec: "True"
  fullName: Biocs.SequenceRange.Start
  nameWithType: SequenceRange.Start
- uid: Biocs.SequenceRange.ToString
  name: ToString()
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_ToString
  commentId: M:Biocs.SequenceRange.ToString
  fullName: Biocs.SequenceRange.ToString()
  nameWithType: SequenceRange.ToString()
- uid: Biocs.SequenceRange.ToString*
  name: ToString
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_ToString_
  commentId: Overload:Biocs.SequenceRange.ToString
  isSpec: "True"
  fullName: Biocs.SequenceRange.ToString
  nameWithType: SequenceRange.ToString
- uid: Biocs.SequenceRange.op_Equality(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator ==(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_Equality_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_Equality(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: =(SequenceRange, SequenceRange)
  fullName: Biocs.SequenceRange.operator ==(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.=(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator ==(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.=(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_Equality*
  name: operator ==
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_Equality_
  commentId: Overload:Biocs.SequenceRange.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Biocs.SequenceRange.operator ==
  fullName.vb: Biocs.SequenceRange.=
  nameWithType: SequenceRange.operator ==
  nameWithType.vb: SequenceRange.=
- uid: Biocs.SequenceRange.op_GreaterThan(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator >(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_GreaterThan_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_GreaterThan(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: '>(SequenceRange, SequenceRange)'
  fullName: Biocs.SequenceRange.operator >(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.>(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator >(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.>(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_GreaterThan*
  name: operator >
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_GreaterThan_
  commentId: Overload:Biocs.SequenceRange.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Biocs.SequenceRange.operator >
  fullName.vb: Biocs.SequenceRange.>
  nameWithType: SequenceRange.operator >
  nameWithType.vb: SequenceRange.>
- uid: Biocs.SequenceRange.op_GreaterThanOrEqual(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator >=(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_GreaterThanOrEqual_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_GreaterThanOrEqual(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: '>=(SequenceRange, SequenceRange)'
  fullName: Biocs.SequenceRange.operator >=(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.>=(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator >=(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.>=(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_GreaterThanOrEqual_
  commentId: Overload:Biocs.SequenceRange.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Biocs.SequenceRange.operator >=
  fullName.vb: Biocs.SequenceRange.>=
  nameWithType: SequenceRange.operator >=
  nameWithType.vb: SequenceRange.>=
- uid: Biocs.SequenceRange.op_Inequality(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator !=(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_Inequality_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_Inequality(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: <>(SequenceRange, SequenceRange)
  fullName: Biocs.SequenceRange.operator !=(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.<>(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator !=(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.<>(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_Inequality*
  name: operator !=
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_Inequality_
  commentId: Overload:Biocs.SequenceRange.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Biocs.SequenceRange.operator !=
  fullName.vb: Biocs.SequenceRange.<>
  nameWithType: SequenceRange.operator !=
  nameWithType.vb: SequenceRange.<>
- uid: Biocs.SequenceRange.op_LessThan(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator <(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_LessThan_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_LessThan(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: <(SequenceRange, SequenceRange)
  fullName: Biocs.SequenceRange.operator <(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.<(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator <(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.<(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_LessThan*
  name: operator <
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_LessThan_
  commentId: Overload:Biocs.SequenceRange.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Biocs.SequenceRange.operator <
  fullName.vb: Biocs.SequenceRange.<
  nameWithType: SequenceRange.operator <
  nameWithType.vb: SequenceRange.<
- uid: Biocs.SequenceRange.op_LessThanOrEqual(Biocs.SequenceRange,Biocs.SequenceRange)
  name: operator <=(SequenceRange, SequenceRange)
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_LessThanOrEqual_Biocs_SequenceRange_Biocs_SequenceRange_
  commentId: M:Biocs.SequenceRange.op_LessThanOrEqual(Biocs.SequenceRange,Biocs.SequenceRange)
  name.vb: <=(SequenceRange, SequenceRange)
  fullName: Biocs.SequenceRange.operator <=(Biocs.SequenceRange, Biocs.SequenceRange)
  fullName.vb: Biocs.SequenceRange.<=(Biocs.SequenceRange, Biocs.SequenceRange)
  nameWithType: SequenceRange.operator <=(SequenceRange, SequenceRange)
  nameWithType.vb: SequenceRange.<=(SequenceRange, SequenceRange)
- uid: Biocs.SequenceRange.op_LessThanOrEqual*
  name: operator <=
  href: api/Biocs.SequenceRange.html#Biocs_SequenceRange_op_LessThanOrEqual_
  commentId: Overload:Biocs.SequenceRange.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Biocs.SequenceRange.operator <=
  fullName.vb: Biocs.SequenceRange.<=
  nameWithType: SequenceRange.operator <=
  nameWithType.vb: SequenceRange.<=
- uid: Biocs.StringResourceUsageAttribute
  name: StringResourceUsageAttribute
  href: api/Biocs.StringResourceUsageAttribute.html
  commentId: T:Biocs.StringResourceUsageAttribute
  fullName: Biocs.StringResourceUsageAttribute
  nameWithType: StringResourceUsageAttribute
- uid: Biocs.StringResourceUsageAttribute.#ctor(System.String,System.Int32)
  name: StringResourceUsageAttribute(string, int)
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute__ctor_System_String_System_Int32_
  commentId: M:Biocs.StringResourceUsageAttribute.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: Biocs.StringResourceUsageAttribute.StringResourceUsageAttribute(string, int)
  fullName.vb: Biocs.StringResourceUsageAttribute.New(String, Integer)
  nameWithType: StringResourceUsageAttribute.StringResourceUsageAttribute(string, int)
  nameWithType.vb: StringResourceUsageAttribute.New(String, Integer)
- uid: Biocs.StringResourceUsageAttribute.#ctor*
  name: StringResourceUsageAttribute
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute__ctor_
  commentId: Overload:Biocs.StringResourceUsageAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Biocs.StringResourceUsageAttribute.StringResourceUsageAttribute
  fullName.vb: Biocs.StringResourceUsageAttribute.New
  nameWithType: StringResourceUsageAttribute.StringResourceUsageAttribute
  nameWithType.vb: StringResourceUsageAttribute.New
- uid: Biocs.StringResourceUsageAttribute.FormatItemCount
  name: FormatItemCount
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_FormatItemCount
  commentId: P:Biocs.StringResourceUsageAttribute.FormatItemCount
  fullName: Biocs.StringResourceUsageAttribute.FormatItemCount
  nameWithType: StringResourceUsageAttribute.FormatItemCount
- uid: Biocs.StringResourceUsageAttribute.FormatItemCount*
  name: FormatItemCount
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_FormatItemCount_
  commentId: Overload:Biocs.StringResourceUsageAttribute.FormatItemCount
  isSpec: "True"
  fullName: Biocs.StringResourceUsageAttribute.FormatItemCount
  nameWithType: StringResourceUsageAttribute.FormatItemCount
- uid: Biocs.StringResourceUsageAttribute.Name
  name: Name
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_Name
  commentId: P:Biocs.StringResourceUsageAttribute.Name
  fullName: Biocs.StringResourceUsageAttribute.Name
  nameWithType: StringResourceUsageAttribute.Name
- uid: Biocs.StringResourceUsageAttribute.Name*
  name: Name
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_Name_
  commentId: Overload:Biocs.StringResourceUsageAttribute.Name
  isSpec: "True"
  fullName: Biocs.StringResourceUsageAttribute.Name
  nameWithType: StringResourceUsageAttribute.Name
- uid: Biocs.StringResourceUsageAttribute.ResourceCheckOnly
  name: ResourceCheckOnly
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_ResourceCheckOnly
  commentId: P:Biocs.StringResourceUsageAttribute.ResourceCheckOnly
  fullName: Biocs.StringResourceUsageAttribute.ResourceCheckOnly
  nameWithType: StringResourceUsageAttribute.ResourceCheckOnly
- uid: Biocs.StringResourceUsageAttribute.ResourceCheckOnly*
  name: ResourceCheckOnly
  href: api/Biocs.StringResourceUsageAttribute.html#Biocs_StringResourceUsageAttribute_ResourceCheckOnly_
  commentId: Overload:Biocs.StringResourceUsageAttribute.ResourceCheckOnly
  isSpec: "True"
  fullName: Biocs.StringResourceUsageAttribute.ResourceCheckOnly
  nameWithType: StringResourceUsageAttribute.ResourceCheckOnly
